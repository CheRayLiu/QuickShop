  [1m[35m (546.0ms)[0m  [1m[35mCREATE DATABASE "shopiy-backend-rails_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (394.9ms)[0m  [1m[35mCREATE DATABASE "shopiy-backend-rails_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ bin/rails:4
  [1m[35m (5.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateProducts (20190109031841)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109031841_create_products.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109031841"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 03:19:59.141873"], ["updated_at", "2019-01-09 03:19:59.141873"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateShoppingCarts (20190109032351)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032351_create_shopping_carts.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032351"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateUsers (20190109032609)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "card_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032609_create_users.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032609"]]
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateCartItems (20190109032835)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateCartItems (20190109033313)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109033313_create_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109033313"]]
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateCartItems (20190109034233)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109034233_create_cart_items.rb:3
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateCartItems (20190109034233)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109034233_create_cart_items.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(7223368574842814730)[0m
  â†³ bin/rails:4
  [1m[35m (1.4ms)[0m  [1m[35mCREATE DATABASE "shopiy-backend-rails_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mCREATE DATABASE "shopiy-backend-rails_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (458.6ms)[0m  [1m[35mCREATE DATABASE "shopify-backend-rails_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (404.7ms)[0m  [1m[35mCREATE DATABASE "shopify-backend-rails_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ bin/rails:4
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(1438350801420462300)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateProducts (20190109031841)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109031841_create_products.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109031841"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateShoppingCarts (20190109032351)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032351_create_shopping_carts.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032351"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateUsers (20190109032609)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "card_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032609_create_users.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032609"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateCartItems (20190109034233)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109034233_create_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109034233"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 03:53:43.425996"], ["updated_at", "2019-01-09 03:53:43.425996"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(1438350801420462300)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (407.5ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (443.7ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ bin/rails:4
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateProducts (20190109031841)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109031841_create_products.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109031841"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateShoppingCarts (20190109032351)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032351_create_shopping_carts.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032351"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateUsers (20190109032609)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (6.2ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "card_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032609_create_users.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032609"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateCartItems (20190109034233)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109034233_create_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109034233"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 03:59:21.709532"], ["updated_at", "2019-01-09 03:59:21.709532"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (1.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to ChangeColumnName (20190109172358)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (6.7ms)[0m  [1m[35mALTER TABLE "users" RENAME COLUMN "card_id" TO "cart_id"[0m
  â†³ db/migrate/20190109172358_change_column_name.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (1.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109172358"]]
  â†³ bin/rails:4
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AdduserIdTousers (20190109175306)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109175306"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to AdduserIdToshoppingCarts (20190109175601)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109175601"]]
  â†³ bin/rails:4
  [1m[35m (3.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddUserToshoppingCarts (20190109175940)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109175940"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddUserToShoppingCarts (20190109180608)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (8.0ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id_id" bigint[0m
  â†³ db/migrate/20190109180608_add_user_to_shopping_carts.rb:3
  [1m[35m (14.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id_id" ON "shopping_carts"  ("user_id_id")[0m
  â†³ db/migrate/20190109180608_add_user_to_shopping_carts.rb:3
  [1m[35m (7.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_b8e41722ca"
FOREIGN KEY ("user_id_id")
  REFERENCES "user_ids" ("id")
[0m
  â†³ db/migrate/20190109180608_add_user_to_shopping_carts.rb:3
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (2.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddPidToCartItem (20190109180915)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "pid_id" bigint[0m
  â†³ db/migrate/20190109180915_add_pid_to_cart_item.rb:3
  [1m[35m (4.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_pid_id" ON "cart_items"  ("pid_id")[0m
  â†³ db/migrate/20190109180915_add_pid_to_cart_item.rb:3
  [1m[35m (4.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_40f97a4ea3"
FOREIGN KEY ("pid_id")
  REFERENCES "pids" ("id")
[0m
  â†³ db/migrate/20190109180915_add_pid_to_cart_item.rb:3
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (1.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id_id" ON "shopping_carts"  ("user_id_id")[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (4.7ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_b8e41722ca"
FOREIGN KEY ("user_id_id")
  REFERENCES "user_ids" ("id")
[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (7.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (1.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (5.6ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id_id" ON "shopping_carts"  ("user_id_id")[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_b8e41722ca"
FOREIGN KEY ("user_id_id")
  REFERENCES "user_ids" ("id")
[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id_id" ON "shopping_carts"  ("user_id_id")[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (4.0ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_b8e41722ca"
FOREIGN KEY ("user_id_id")
  REFERENCES "user_ids" ("id")
[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (1.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (2.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id_id" ON "shopping_carts"  ("user_id_id")[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (7.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_b8e41722ca"
FOREIGN KEY ("user_id_id")
  REFERENCES "user_ids" ("id")
[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (7.3ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (4.5ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (222.0ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (196.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (531.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (384.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35mSQL (1.1ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (1.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (8.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:26
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:38
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:38
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:48
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:48
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109175940)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (1.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 18:51:23.268130"], ["updated_at", "2019-01-09 18:51:23.268130"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (7.7ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:26
  [1m[35m (5.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:26
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:38
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:38
  [1m[35m (0.6ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:48
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:48
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109175940)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 18:51:23.345850"], ["updated_at", "2019-01-09 18:51:23.345850"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[36mActiveRecord::InternalMetadata Update (1.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 18:51:23.350881"], ["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.9ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.9ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (8.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" DROP COLUMN "user"[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (203.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (169.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (481.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (436.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35mSQL (0.9ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:26
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:26
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:38
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:38
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:48
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:48
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (1.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109175940)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 18:57:02.955518"], ["updated_at", "2019-01-09 18:57:02.955518"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:26
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:38
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:38
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:48
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:48
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109175940)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 18:57:03.014685"], ["updated_at", "2019-01-09 18:57:03.014685"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[36mActiveRecord::InternalMetadata Update (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 18:57:03.018792"], ["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (1.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (4.4ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (213.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (195.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (494.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (432.0ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:26
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:38
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:38
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:48
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:48
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109175940)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 18:57:47.675248"], ["updated_at", "2019-01-09 18:57:47.675248"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35mSQL (0.2ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "pid" bigint, "quantity" integer, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:26
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:26
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:38
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:38
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:48
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:48
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109175940)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 18:57:47.734239"], ["updated_at", "2019-01-09 18:57:47.734239"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[36mActiveRecord::InternalMetadata Update (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 18:57:47.738190"], ["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (204.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (195.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (535.5ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (388.7ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:24
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:36
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:36
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:45
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:45
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109175940)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 18:58:47.468606"], ["updated_at", "2019-01-09 18:58:47.468606"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:24
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:36
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:36
  [1m[35m (0.6ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:45
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:45
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109175940)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 18:58:47.527983"], ["updated_at", "2019-01-09 18:58:47.527983"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 18:58:47.532643"], ["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (8.9ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109182035"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartToCartItems (20190109190119)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (11.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddCartToCartItems (20190109190119)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (209.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (200.0ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (413.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (373.7ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:24
  [1m[35m (5.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:36
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:36
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:36
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:47
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:47
  [1m[35m (2.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:55
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109182035)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 19:04:48.367641"], ["updated_at", "2019-01-09 19:04:48.367641"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.0ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:24
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:36
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:36
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:36
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:47
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:47
  [1m[35m (2.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:55
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109182035)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 19:04:48.431122"], ["updated_at", "2019-01-09 19:04:48.431122"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 19:04:48.434241"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartToCartItems (20190109190119)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartToCartItems (20190109190119)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (155.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (195.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (439.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (380.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:24
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:36
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:36
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:36
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:47
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:47
  [1m[35m (2.7ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:55
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109182035)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 19:08:31.856431"], ["updated_at", "2019-01-09 19:08:31.856431"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.6ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:24
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:36
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:36
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:36
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:47
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:47
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:55
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109182035)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 19:08:31.917416"], ["updated_at", "2019-01-09 19:08:31.917416"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 19:08:31.921966"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartToCartItems (20190109190119)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109190119_add_cart_to_cart_items.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (153.0ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (192.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (385.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (419.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:24
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:36
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:36
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:36
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:47
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:47
  [1m[35m (2.9ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:55
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109182035)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 19:10:07.863565"], ["updated_at", "2019-01-09 19:10:07.863565"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.0ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:24
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:36
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:36
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:36
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:47
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:47
  [1m[35m (2.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:55
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109182035)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109032609),
(20190109034233),
(20190109172358);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 19:10:07.926998"], ["updated_at", "2019-01-09 19:10:07.926998"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 19:10:07.930730"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartRefToCartItem (20190109191138)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (1.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (1.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartRefToCartItem (20190109191138)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (4.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartRefToCartItem (20190109191138)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (2.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109191138_add_cart_ref_to_cart_item.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartToCartItem (20190109193756)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id_id" bigint[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id_id" ON "cart_items"  ("cart_id_id")[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (2.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1f99848c60"
FOREIGN KEY ("cart_id_id")
  REFERENCES "cart_ids" ("id")
[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartToCartItem (20190109193756)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartToCartItem (20190109193756)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (1.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109193756_add_cart_to_cart_item.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartIdRefToCartItems (20190109194701)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (2.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartIdRefToCartItems (20190109194701)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (2.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartIdRefToCartItems (20190109194701)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "cart_id" bigint[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_cart_id" ON "cart_items"  ("cart_id")[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_6cdb1f0139"
FOREIGN KEY ("cart_id")
  REFERENCES "carts" ("id")
[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddCartIdRefToCartItems (20190109194701)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "shopping_carts_id" bigint[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (2.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109194701"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to AddProductRefToCartItems (20190109195636)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "product_id" bigint[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[35m (2.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109195636"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (192.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (226.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (559.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (398.0ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (6.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:40
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:40
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:40
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:51
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:51
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (2.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:61
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.9ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 20:00:11.167111"], ["updated_at", "2019-01-09 20:00:11.167111"]]
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (3.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (6.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "pid" integer, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:40
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:40
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:40
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:51
  [1m[35m (6.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:51
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:61
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (5.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 20:00:11.255026"], ["updated_at", "2019-01-09 20:00:11.255026"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.7ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 20:00:11.258762"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (176.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (171.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (506.5ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (384.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 20:17:12.543291"], ["updated_at", "2019-01-09 20:17:12.543291"]]
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 20:17:12.620704"], ["updated_at", "2019-01-09 20:17:12.620704"]]
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 20:17:12.626179"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (196.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (213.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (407.0ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (379.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.5ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (2.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (3.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (2.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.4ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 20:17:32.441612"], ["updated_at", "2019-01-09 20:17:32.441612"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-09 20:17:32.519473"], ["updated_at", "2019-01-09 20:17:32.519473"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-09 20:17:32.522745"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Started GET "/" for 127.0.0.1 at 2019-01-09 15:31:52 -0500
  [1m[35m (1.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by Rails::WelcomeController#index as HTML
  Rendering /Library/Ruby/Gems/2.3.0/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb (5.1ms)
Completed 200 OK in 36ms (Views: 13.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-09 15:32:05 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (1342.7ms)
Completed 200 OK in 1363ms (Views: 1354.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 15:32:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 24ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Decimal' for #<GraphQL::Define::TypeDefiner:0x00007ff5934487a8>):
  
app/graphql/types/product_type.rb:6:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-09 15:32:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"", "variables"=>nil, "graphql"=>{"query"=>"", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Decimal' for #<GraphQL::Define::TypeDefiner:0x00007ff5934487a8>):
  
app/graphql/types/product_type.rb:6:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-09 15:32:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  products {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  products {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Decimal' for #<GraphQL::Define::TypeDefiner:0x00007ff5934487a8>):
  
app/graphql/types/product_type.rb:6:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-09 15:36:08 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (246.4ms)
Completed 200 OK in 279ms (Views: 257.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 15:36:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 75ms (Views: 16.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 15:36:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  products {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  products {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 2.7ms)


  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (5.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-09 20:47:40.218200"], ["updated_at", "2019-01-09 20:47:40.218200"]]
  â†³ db/seeds.rb:11
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-09 15:47:59 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  products {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  products {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 62ms (Views: 0.3ms | ActiveRecord: 3.9ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-09 21:52:46 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (265.6ms)
Completed 200 OK in 308ms (Views: 277.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:52:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 82ms (Views: 12.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:52:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.8ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 30ms (Views: 0.3ms | ActiveRecord: 8.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:53:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id=1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id=1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:53:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id=0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id=0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:56:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id=0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id=0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:56:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id=0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id=0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:56:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id=0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id=0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:56:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id:0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id:0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:14
Completed 404 Not Found in 13ms (ActiveRecord: 0.5ms)


  
ActiveRecord::RecordNotFound (Couldn't find Product with 'id'=0):
  
app/graphql/types/query_type.rb:14:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:56:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:14
Completed 404 Not Found in 4ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordNotFound (Couldn't find Product with 'id'=0):
  
app/graphql/types/query_type.rb:14:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-09 21:56:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:14
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (7.8ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 19:52:38.829560"], ["updated_at", "2019-01-10 19:52:38.829560"]]
  â†³ db/seeds.rb:11
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 19:52:38.843552"], ["updated_at", "2019-01-10 19:52:38.843552"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started GET "/" for 127.0.0.1 at 2019-01-10 14:52:58 -0500
  [1m[35m (1.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by Rails::WelcomeController#index as HTML
  Rendering /Library/Ruby/Gems/2.3.0/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb (3.7ms)
Completed 200 OK in 35ms (Views: 10.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 14:53:03 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (280.3ms)
Completed 200 OK in 298ms (Views: 290.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:53:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 71ms (Views: 10.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:53:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  products {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  products {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:53:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 35ms (Views: 0.9ms | ActiveRecord: 5.6ms)


  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 19:53:29.689396"], ["updated_at", "2019-01-10 19:53:29.689396"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 19:53:29.692117"], ["updated_at", "2019-01-10 19:53:29.692117"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 14:53:41 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (214.4ms)
Completed 200 OK in 245ms (Views: 224.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:53:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 68ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:53:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.9ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 25ms (Views: 0.8ms | ActiveRecord: 5.6ms)


  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (5.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (234.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (228.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (569.9ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (398.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (1.7ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (8.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (4.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 19:53:54.563763"], ["updated_at", "2019-01-10 19:53:54.563763"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 19:53:54.640278"], ["updated_at", "2019-01-10 19:53:54.640278"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.5ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-10 19:53:54.643118"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 19:53:54.684329"], ["updated_at", "2019-01-10 19:53:54.684329"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 19:53:54.688436"], ["updated_at", "2019-01-10 19:53:54.688436"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 19:54:01.846866"], ["updated_at", "2019-01-10 19:54:01.846866"]]
  â†³ db/seeds.rb:11
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 19:54:01.850442"], ["updated_at", "2019-01-10 19:54:01.850442"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 14:54:13 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (224.6ms)
Completed 200 OK in 256ms (Views: 235.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:54:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 69ms (Views: 12.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:54:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 28ms (Views: 0.7ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:55:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:55:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:55:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:55:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:55:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:55:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:55:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:55:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:56:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:56:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:56:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:56:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:56:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 14:56:40 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (226.4ms)
Completed 200 OK in 256ms (Views: 235.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:56:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:16: syntax error, unexpected keyword_end, expecting end-of-input):
  
app/graphql/types/query_type.rb:16: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:56:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/shopiy_backend_rails_schema.rb:2:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:56:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 31ms (Views: 0.4ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:57:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id:1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id:1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:13
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:57:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id:2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id:2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:13
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:57:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id:3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id:3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:13
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (205.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (195.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (375.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (413.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 19:57:50.018318"], ["updated_at", "2019-01-10 19:57:50.018318"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 19:57:50.092103"], ["updated_at", "2019-01-10 19:57:50.092103"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-10 19:57:50.095437"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.7ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 19:57:50.135320"], ["updated_at", "2019-01-10 19:57:50.135320"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 19:57:50.139117"], ["updated_at", "2019-01-10 19:57:50.139117"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 14:58:41 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (210.7ms)
Completed 200 OK in 242ms (Views: 220.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:58:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 70ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:58:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id:3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id:3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:13
Completed 404 Not Found in 18ms (ActiveRecord: 5.5ms)


  
ActiveRecord::RecordNotFound (Couldn't find Product with 'id'=3):
  
app/graphql/types/query_type.rb:13:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:58:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id:2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id:2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:13
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:58:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id:3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id:3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:13
Completed 404 Not Found in 4ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordNotFound (Couldn't find Product with 'id'=3):
  
app/graphql/types/query_type.rb:13:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 14:58:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 15:13:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:15: syntax error, unexpected ':', expecting keyword_then or ';' or '\n'):
  
app/graphql/types/query_type.rb:15: syntax error, unexpected ':', expecting keyword_then or ';' or '\n'
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 15:15:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:16: syntax error, unexpected '}', expecting keyword_end):
  
app/graphql/types/query_type.rb:16: syntax error, unexpected '}', expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 15:30:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:17: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/graphql/types/query_type.rb:17: syntax error, unexpected end-of-input, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 15:31:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/shopiy_backend_rails_schema.rb:2:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 15:31:13 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 22ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:17: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/graphql/types/query_type.rb:17: syntax error, unexpected end-of-input, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 15:31:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (4.0ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 40ms (Views: 0.3ms | ActiveRecord: 7.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 15:31:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 2, expected 1)):
  
app/graphql/types/query_type.rb:15:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 15:33:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0) LIMIT $1[0m  [["LIMIT", 11]]
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Completed 500 Internal Server Error in 30ms (ActiveRecord: 0.0ms)


  
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0) LIMIT $1[0m  [["LIMIT", 11]]
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
NoMethodError (undefined method `title' for #<Product::ActiveRecord_Relation:0x00007f8066783208>):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:34:35 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0) LIMIT $1[0m  [["LIMIT", 11]]
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Completed 500 Internal Server Error in 79ms (ActiveRecord: 0.0ms)


  
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0) LIMIT $1[0m  [["LIMIT", 11]]
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
NoMethodError (undefined method `title' for #<Product::ActiveRecord_Relation:0x00007fcae1e8efa0>):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:40:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0) LIMIT $1[0m  [["LIMIT", 11]]
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0) LIMIT $1[0m  [["LIMIT", 11]]
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
NoMethodError (undefined method `title' for #<Product::ActiveRecord_Relation:0x00007fcae3133958>):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:41:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n  \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n  \n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:41:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n  \t\ttitle\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n  \t\ttitle\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0) LIMIT $1[0m  [["LIMIT", 11]]
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0) LIMIT $1[0m  [["LIMIT", 11]]
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
NoMethodError (undefined method `title' for #<Product::ActiveRecord_Relation:0x00007fcadda996b0>):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:42:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n  \t\ttitle\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n  \t\ttitle\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "product" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:43:17 -0500
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n  \t\ttitle\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n  \t\ttitle\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 65ms (Views: 0.7ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:45:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:46:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:46:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 16:46:32 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (256.9ms)
Completed 200 OK in 291ms (Views: 269.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:46:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 91ms (Views: 17.6ms | ActiveRecord: 0.0ms)


  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (6.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (229.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (225.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (463.7ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (425.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (6.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:46:48.775516"], ["updated_at", "2019-01-10 21:46:48.775516"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (7.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:46:48.861056"], ["updated_at", "2019-01-10 21:46:48.861056"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-10 21:46:48.866568"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.1ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 21:46:48.909891"], ["updated_at", "2019-01-10 21:46:48.909891"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 21:46:48.914979"], ["updated_at", "2019-01-10 21:46:48.914979"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-10 21:46:48.917334"], ["updated_at", "2019-01-10 21:46:48.917334"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (212.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (226.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (428.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (442.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:46:55.783499"], ["updated_at", "2019-01-10 21:46:55.783499"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:46:55.855940"], ["updated_at", "2019-01-10 21:46:55.855940"]]
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-10 21:46:55.860972"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.9ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 21:46:55.899289"], ["updated_at", "2019-01-10 21:46:55.899289"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 21:46:55.902798"], ["updated_at", "2019-01-10 21:46:55.902798"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-10 21:46:55.904702"], ["updated_at", "2019-01-10 21:46:55.904702"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 21:47:02.417732"], ["updated_at", "2019-01-10 21:47:02.417732"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 21:47:02.420769"], ["updated_at", "2019-01-10 21:47:02.420769"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-10 21:47:02.422526"], ["updated_at", "2019-01-10 21:47:02.422526"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:12 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 51ms (Views: 0.3ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:47:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:14: syntax error, unexpected '}'):
  
app/graphql/types/query_type.rb:14: syntax error, unexpected '}'
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:50:26 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/controllers/graphql_controller.rb:14: syntax error, unexpected '}', expecting =>
/Users/ray/Documents/Development/Projects/QuickShop/app/controllers/graphql_controller.rb:37: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/graphql_controller.rb:14: syntax error, unexpected '}', expecting =>
app/controllers/graphql_controller.rb:37: syntax error, unexpected end-of-input, expecting keyword_end
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:51:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 43ms (Views: 0.4ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:51:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:51:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:51:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '4' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:51:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 5) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 5) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '5' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 0.4ms)


  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (215.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (213.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (471.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (417.7ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (4.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (2.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:52:10.359271"], ["updated_at", "2019-01-10 21:52:10.359271"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:52:10.436020"], ["updated_at", "2019-01-10 21:52:10.436020"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-10 21:52:10.440109"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.0ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 21:52:10.485350"], ["updated_at", "2019-01-10 21:52:10.485350"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 21:52:10.489899"], ["updated_at", "2019-01-10 21:52:10.489899"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-10 21:52:10.493367"], ["updated_at", "2019-01-10 21:52:10.493367"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (209.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (218.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (438.0ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (384.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:52:15.486708"], ["updated_at", "2019-01-10 21:52:15.486708"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:52:15.560744"], ["updated_at", "2019-01-10 21:52:15.560744"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.6ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-10 21:52:15.565044"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.7ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 21:52:15.609421"], ["updated_at", "2019-01-10 21:52:15.609421"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 21:52:15.613076"], ["updated_at", "2019-01-10 21:52:15.613076"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-10 21:52:15.616610"], ["updated_at", "2019-01-10 21:52:15.616610"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (162.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (182.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (408.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (442.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:52:30.961840"], ["updated_at", "2019-01-10 21:52:30.961840"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.4ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-10 21:52:31.037284"], ["updated_at", "2019-01-10 21:52:31.037284"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-10 21:52:31.040338"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.9ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 21:52:31.077626"], ["updated_at", "2019-01-10 21:52:31.077626"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 21:52:31.081489"], ["updated_at", "2019-01-10 21:52:31.081489"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-10 21:52:31.083247"], ["updated_at", "2019-01-10 21:52:31.083247"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-10 21:52:40.394874"], ["updated_at", "2019-01-10 21:52:40.394874"]]
  â†³ db/seeds.rb:11
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-10 21:52:40.398332"], ["updated_at", "2019-01-10 21:52:40.398332"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-10 21:52:40.400458"], ["updated_at", "2019-01-10 21:52:40.400458"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:52:52 -0500
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 5) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 5) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '5' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 69ms (Views: 0.5ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:52:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:56:31 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 55ms (Views: 0.6ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:57:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:57:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 26ms (Views: 0.3ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:57:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:57:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:58:03 -0500
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 46ms (Views: 0.5ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 16:59:47 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/controllers/graphql_controller.rb:14: syntax error, unexpected '}', expecting =>
/Users/ray/Documents/Development/Projects/QuickShop/app/controllers/graphql_controller.rb:37: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/graphql_controller.rb:14: syntax error, unexpected '}', expecting =>
app/controllers/graphql_controller.rb:37: syntax error, unexpected end-of-input, expecting keyword_end
Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 17:00:42 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (255.1ms)
Completed 200 OK in 289ms (Views: 266.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 67ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.8ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:00:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:06:35 -0500
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 45ms (Views: 0.3ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:06:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 20ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:07:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:14:46 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.8ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 60ms (Views: 0.3ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:14:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 21ms (Views: 0.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:15:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 27ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:15:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:15:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:15:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:16:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:16:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:16:58 -0500
  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/controllers/graphql_controller.rb:12: syntax error, unexpected ':', expecting '}'
    if result. == {"product": []}
                             ^):
  
app/controllers/graphql_controller.rb:12: syntax error, unexpected ':', expecting '}'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:17:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 500 Internal Server Error in 30ms (ActiveRecord: 4.3ms)


  
NoMethodError (undefined method `length' for nil:NilClass):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:17:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 35ms (Views: 0.2ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:17:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:17:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 29ms (Views: 0.2ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:17:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:18:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 23ms (Views: 0.2ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:20:02 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.9ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 62ms (Views: 0.3ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:20:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:20:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:20:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:20:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 27ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:21:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:25:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 23ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:26:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:26:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:26:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:31:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 30ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:31:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 17:34:19 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (245.5ms)
Completed 200 OK in 265ms (Views: 258.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:34:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 28ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:34:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 29ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:34:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 21ms (Views: 0.2ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:34:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:34:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:34:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:34:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:34:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:39:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 6) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 6) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '6' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:39:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:40:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 18ms (Views: 0.4ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:40:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:40:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:40:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 24ms (Views: 0.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:40:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:40:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-10 17:41:10 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (255.7ms)
Completed 200 OK in 297ms (Views: 274.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 55ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 31ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (1.0ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:22 -0500
  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/controllers/graphql_controller.rb:32: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/controllers/graphql_controller.rb:32: syntax error, unexpected end-of-input, expecting keyword_end
Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:41:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '8' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 18ms (Views: 0.2ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:42:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:42:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:42:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:42:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:50:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-10 17:52:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-11 15:34:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (3.2ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 54ms (Views: 0.5ms | ActiveRecord: 7.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-11 15:34:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (3.8ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 71ms (Views: 0.2ms | ActiveRecord: 7.4ms)


  [1m[35m (3.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (1.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (203.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (192.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (489.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (472.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (2.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (1.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (10.5ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (6.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (1.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 21:58:15.350187"], ["updated_at", "2019-01-11 21:58:15.350187"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 21:58:15.432872"], ["updated_at", "2019-01-11 21:58:15.432872"]]
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (1.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-11 21:58:15.439259"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.8ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-11 21:58:15.480210"], ["updated_at", "2019-01-11 21:58:15.480210"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-11 21:58:15.485938"], ["updated_at", "2019-01-11 21:58:15.485938"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-11 21:58:15.488340"], ["updated_at", "2019-01-11 21:58:15.488340"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (217.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (204.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (429.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (381.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 21:59:17.666236"], ["updated_at", "2019-01-11 21:59:17.666236"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (3.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 21:59:17.748001"], ["updated_at", "2019-01-11 21:59:17.748001"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-11 21:59:17.751348"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.7ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-11 21:59:17.797505"], ["updated_at", "2019-01-11 21:59:17.797505"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-11 21:59:17.800993"], ["updated_at", "2019-01-11 21:59:17.800993"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-11 21:59:17.803770"], ["updated_at", "2019-01-11 21:59:17.803770"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (160.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (185.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (538.7ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (381.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 22:00:06.726547"], ["updated_at", "2019-01-11 22:00:06.726547"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.2ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 22:00:06.802530"], ["updated_at", "2019-01-11 22:00:06.802530"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-11 22:00:06.806711"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (207.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (207.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (496.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (385.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 22:02:03.235593"], ["updated_at", "2019-01-11 22:02:03.235593"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (3.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (1.0ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 22:02:03.318075"], ["updated_at", "2019-01-11 22:02:03.318075"]]
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-11 22:02:03.324238"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (211.0ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (181.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (399.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (401.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (2.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 22:05:02.895601"], ["updated_at", "2019-01-11 22:05:02.895601"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.6ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "cart_id" bigint, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:50
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "email" character varying, "password" character varying, "cart_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:50
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:60
  [1m[35m (6.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 22:05:02.978180"], ["updated_at", "2019-01-11 22:05:02.978180"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-11 22:05:02.982698"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-11 22:05:03.041766"], ["updated_at", "2019-01-11 22:05:03.041766"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-11 22:05:03.047874"], ["updated_at", "2019-01-11 22:05:03.047874"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-11 22:05:03.051371"], ["updated_at", "2019-01-11 22:05:03.051371"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-11 22:05:24.873133"], ["updated_at", "2019-01-11 22:05:24.873133"]]
  â†³ db/seeds.rb:11
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-11 22:05:24.877521"], ["updated_at", "2019-01-11 22:05:24.877521"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-11 22:05:24.880203"], ["updated_at", "2019-01-11 22:05:24.880203"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (231.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (214.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (510.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (360.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (11.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Migrating to CreateProducts (20190109031841)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (16.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109031841_create_products.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109031841"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
Migrating to CreateShoppingCarts (20190109032351)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032351_create_shopping_carts.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032351"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
Migrating to CreateUsers (20190109032609)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "name" character varying, "email" character varying, "password" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032609_create_users.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032609"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
Migrating to CreateCartItems (20190109034233)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109034233_create_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109034233"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddUserIdRefToShoppingCart (20190109182035)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (3.8ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD "user_id" bigint[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[35m (2.4ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/migrate/20190109182035_add_user_id_ref_to_shopping_cart.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109182035"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddCartIdRefToCartItems (20190109194701)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "shopping_carts_id" bigint[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (12.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109194701"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
Migrating to AddProductRefToCartItems (20190109195636)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "product_id" bigint[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[35m (3.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[35m (2.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109195636"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ /usr/local/bin/rake:22
  [1m[36mActiveRecord::InternalMetadata Create (1.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-11 22:07:14.268832"], ["updated_at", "2019-01-11 22:07:14.268832"]]
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ /usr/local/bin/rake:22
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /usr/local/bin/rake:22
Started GET "/" for 127.0.0.1 at 2019-01-11 17:07:40 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by Rails::WelcomeController#index as HTML
  Rendering /Library/Ruby/Gems/2.3.0/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb (4.3ms)
Completed 200 OK in 33ms (Views: 10.5ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-11 17:07:46 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (265.2ms)
Completed 200 OK in 281ms (Views: 276.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:07:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `userType' for Types:Module):
  
app/graphql/types/query_type.rb:17:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:07:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `userType' for Types:Module):
  
app/graphql/types/query_type.rb:17:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:07:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `userType' for Types:Module):
  
app/graphql/types/query_type.rb:17:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:09:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 21ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'type'):
  
app/graphql/types/user_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:10:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 8) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'type'):
  
app/graphql/types/user_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:10:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'type'):
  
app/graphql/types/user_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:12:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'type'):
  
app/graphql/types/user_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:15:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'type'):
  
app/graphql/types/user_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-11 17:18:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (1.6ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 30ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 16:14:57 -0500
  [1m[35m (1.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (252.1ms)
Completed 200 OK in 289ms (Views: 265.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:14:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 17ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'type'):
  
app/graphql/types/user_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:14:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'type'):
  
app/graphql/types/user_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:19:41 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 31ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::ObjectType can't define 'type'):
  
app/graphql/types/user_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:20:07 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (2.1ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 54ms (Views: 0.4ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:20:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:20:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:27:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 23ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `to_list_type' for #<Class:0x00007ff97bade6f8>):
  
app/graphql/types/query_type.rb:17:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:30:44 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 46ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `to_list_type' for #<Class:0x00007ff40881cc08>):
  
app/graphql/types/query_type.rb:17:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:31:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 22ms (Views: 0.3ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:32:06 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 59ms (Views: 0.6ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:32:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:32:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:32:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    name,\n    email,\n    password\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:32:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:32:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:32:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:32:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.3ms)


  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (15.9ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-12 21:32:54.931581"], ["updated_at", "2019-01-12 21:32:54.931581"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-12 21:32:54.951293"], ["updated_at", "2019-01-12 21:32:54.951293"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-12 21:32:54.953356"], ["updated_at", "2019-01-12 21:32:54.953356"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-12 21:35:06.755488"], ["updated_at", "2019-01-12 21:35:06.755488"]]
  â†³ db/seeds.rb:11
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-12 21:35:06.760137"], ["updated_at", "2019-01-12 21:35:06.760137"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-12 21:35:06.762811"], ["updated_at", "2019-01-12 21:35:06.762811"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (3.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (229.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (169.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (511.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (456.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (3.9ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.8ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (12.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:49
  [1m[35m (5.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "name" character varying, "email" character varying, "password" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:49
  [1m[35m (7.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:57
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 21:35:13.916127"], ["updated_at", "2019-01-12 21:35:13.916127"]]
  â†³ db/schema.rb:13
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (7.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (2.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:49
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "name" character varying, "email" character varying, "password" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:49
  [1m[35m (3.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:57
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 21:35:14.012376"], ["updated_at", "2019-01-12 21:35:14.012376"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (1.5ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-12 21:35:14.017163"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-12 21:35:14.058785"], ["updated_at", "2019-01-12 21:35:14.058785"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-12 21:35:14.063580"], ["updated_at", "2019-01-12 21:35:14.063580"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-12 21:35:14.065979"], ["updated_at", "2019-01-12 21:35:14.065979"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (182.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (218.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (537.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (381.0ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:49
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "name" character varying, "email" character varying, "password" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:49
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:57
  [1m[35m (1.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 21:36:15.261217"], ["updated_at", "2019-01-12 21:36:15.261217"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:49
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "name" character varying, "email" character varying, "password" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:49
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:57
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 21:36:15.337753"], ["updated_at", "2019-01-12 21:36:15.337753"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-12 21:36:15.341265"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-12 21:36:15.382036"], ["updated_at", "2019-01-12 21:36:15.382036"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-12 21:36:15.385777"], ["updated_at", "2019-01-12 21:36:15.385777"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-12 21:36:15.389264"], ["updated_at", "2019-01-12 21:36:15.389264"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:44
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("name", "email", "password", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "Ray"], ["email", "rayliu109@gmail.com"], ["password", "12345"], ["created_at", "2019-01-12 21:36:15.408799"], ["updated_at", "2019-01-12 21:36:15.408799"]]
  â†³ db/seeds.rb:44
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:44
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:51:43 -0500
  [1m[35m (1.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 72ms (Views: 0.7ms | ActiveRecord: 5.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 16:51:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allusers() {\n    name\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allusers() {\n    name\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 19ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started GET "/" for 127.0.0.1 at 2019-01-12 17:22:20 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by Rails::WelcomeController#index as HTML
  Rendering /Library/Ruby/Gems/2.3.0/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb (4.9ms)
Completed 200 OK in 32ms (Views: 11.4ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 17:22:24 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (255.0ms)
Completed 200 OK in 271ms (Views: 266.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:22:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 17ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:22:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:25:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:25:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:26:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:27:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:27:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "product" argument "id" type must be a valid input type (Scalar or InputObject), not Class (String)):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:27:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "product" argument "id" type must be a valid input type (Scalar or InputObject), not Class (String)):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:27:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'id'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:28:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:29:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:11: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
    argument :id, ID, require :true
                               ^):
  
app/graphql/types/query_type.rb:11: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:29:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:30:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:30:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:30:39 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 30ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 17:32:21 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (235.8ms)
Completed 200 OK in 251ms (Views: 246.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:32:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:32:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:32:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:32:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:32:55 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 30ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:33:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2, title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2, title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:33:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:33:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2, title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2, title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:33:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:34:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:34:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:34:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:34:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1,title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1,title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:34:38 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1,title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1,title: Apple ) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 29ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:49:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproduct() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproduct() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:49:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:50:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:50:28 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 37ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:50:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 17:51:08 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (256.6ms)
Completed 200 OK in 290ms (Views: 268.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:11 -0500
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:12 -0500
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


  
Processing by GraphqlController#execute as */*
ArgumentError (wrong number of arguments (given 1, expected 2)):
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:12 -0500
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:51:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 17:52:03 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (257.9ms)
Completed 200 OK in 289ms (Views: 268.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:52:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:52:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:53:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:54:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (4.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (232.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (190.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (527.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (395.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:49
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "name" character varying, "email" character varying, "password" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:49
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:57
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 22:54:32.583206"], ["updated_at", "2019-01-12 22:54:32.583206"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (6.9ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "shipping_info_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_shopping_carts_on_user_id" ON "shopping_carts"  ("user_id")[0m
  â†³ db/schema.rb:39
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  â†³ db/schema.rb:49
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "name" character varying, "email" character varying, "password" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:49
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:57
  [1m[35m (2.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:58
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "shopping_carts" ADD CONSTRAINT "fk_rails_8228391db2"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  â†³ db/schema.rb:59
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109182035),
(20190109032609),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 22:54:32.669513"], ["updated_at", "2019-01-12 22:54:32.669513"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-12 22:54:32.672971"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.0ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-12 22:54:32.714034"], ["updated_at", "2019-01-12 22:54:32.714034"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-12 22:54:32.718057"], ["updated_at", "2019-01-12 22:54:32.718057"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-12 22:54:32.719770"], ["updated_at", "2019-01-12 22:54:32.719770"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:44
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("name", "email", "password", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "Ray"], ["email", "rayliu109@gmail.com"], ["password", "12345"], ["created_at", "2019-01-12 22:54:32.730965"], ["updated_at", "2019-01-12 22:54:32.730965"]]
  â†³ db/seeds.rb:44
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:44
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:54:43 -0500
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 31ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 17:55:41 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Library/Ruby/Gems/2.3.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (273.3ms)
Completed 200 OK in 305ms (Views: 283.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:55:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:55:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:57:15 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 33ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 17:58:22 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 38ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:01:50 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 76ms (Views: 1.2ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:01:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:02:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:03:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:03:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:05:53 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 75ms (Views: 0.5ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:06:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:10:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 36ms (Views: 0.4ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:10:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'id'):
  
app/graphql/types/query_type.rb:13:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:10:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:10:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:10:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:10:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:10:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:10:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:13:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:13:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:13:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant ID):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:19:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:49: syntax error, unexpected keyword_end, expecting end-of-input):
  
app/graphql/types/query_type.rb:49: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:20:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:22:36 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Library/Ruby/Gems/2.3.0/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 30ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/" for 127.0.0.1 at 2019-01-12 18:39:39 -0500
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb (3.3ms)
Completed 200 OK in 18ms (Views: 10.0ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 18:39:43 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (1063.6ms)
Completed 200 OK in 1082ms (Views: 1075.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:39:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:39:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:40:18 -0500
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 18:40:56 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (242.9ms)
Completed 200 OK in 261ms (Views: 252.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:40:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 55ms (Views: 5.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:40:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  allproducts() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.9ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 28ms (Views: 0.3ms | ActiveRecord: 6.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:41:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `product' for nil:NilClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 18:43:38 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (9.4ms)
Completed 200 OK in 24ms (Views: 20.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:43:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:43:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:43:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:43:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'null'):
  
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 18:46:16 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (16.4ms)
Completed 200 OK in 33ms (Views: 27.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:46:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 18:46:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/types/query_type.rb:11:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:14:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 44ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `product' for nil:NilClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:15:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 21ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:15:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `product' for nil:NilClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:18:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (1.1ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 48ms (Views: 0.2ms | ActiveRecord: 6.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:18:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 500 Internal Server Error in 35ms (ActiveRecord: 5.4ms)


  
ArgumentError ('#<GraphQL::Query::Result @query=... @to_h={"data"=>{"product"=>[{"title"=>"Apple", "description"=>"Good", "price"=>2.5, "shipping"=>0.99, "inventory_count"=>20, "sold_count"=>30}]}}>' is not an ActiveModel-compatible object. It must implement :to_partial_path.):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:19:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 37ms (Views: 0.2ms | ActiveRecord: 5.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:20:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 500 Internal Server Error in 186ms (ActiveRecord: 3.2ms)


  
NameError (undefined local variable or method `data' for #<GraphqlController:0x00007facf352dfa8>):
  
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:20:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 54ms (Views: 0.2ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:21:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 45ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:21:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 34ms (Views: 0.3ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:21:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 34ms (Views: 0.2ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:22:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 44ms (Views: 0.3ms | ActiveRecord: 3.6ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 20:22:31 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (14.7ms)
Completed 200 OK in 33ms (Views: 25.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:22:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 65ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:22:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 59ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:22:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:23:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:23:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 20:23:30 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (7.9ms)
Completed 200 OK in 24ms (Views: 19.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:23:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 68ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:23:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 46ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:23:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:23:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:23:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.8ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 45ms (Views: 0.3ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:26:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.8ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 500 Internal Server Error in 111ms (ActiveRecord: 5.3ms)


  
ArgumentError (wrong number of arguments (given 0, expected 1)):
  
app/controllers/graphql_controller.rb:11:in `[]'
app/controllers/graphql_controller.rb:11:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:27:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.4ms)


  
ArgumentError (wrong number of arguments (given 0, expected 1)):
  
app/controllers/graphql_controller.rb:11:in `[]'
app/controllers/graphql_controller.rb:11:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 20:27:12 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (15.1ms)
Completed 200 OK in 31ms (Views: 25.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:27:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 68ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:27:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 48ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:27:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 2){\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 20:27:16 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (7.6ms)
Completed 200 OK in 25ms (Views: 19.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:27:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 68ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:27:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 41ms (Views: 6.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:28:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  product(id: 2) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  product(id: 2) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:28:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  product(id: 4) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  product(id: 4) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '4' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:29:22 -0500
  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/controllers/graphql_controller.rb:11: syntax error, unexpected ':', expecting keyword_end
...ult['data']['product'] == json: []
...                              ^):
  
app/controllers/graphql_controller.rb:11: syntax error, unexpected ':', expecting keyword_end
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:29:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  product(id: 4) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  product(id: 4) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '4' AND inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 31ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 20:38:11 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (38.5ms)
Completed 200 OK in 57ms (Views: 49.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:38:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 29ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `boolean' for #<GraphQL::Define::TypeDefiner:0x00007facf34df088>
Did you mean?  Boolean):
  
app/graphql/types/query_type.rb:5:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:38:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `boolean' for #<GraphQL::Define::TypeDefiner:0x00007facf34df088>
Did you mean?  Boolean):
  
app/graphql/types/query_type.rb:5:in `block (2 levels) in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:38:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 25ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:39:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 23ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:39:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:39:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:39:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:39:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:39:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:39:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 20:40:24 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (18.6ms)
Completed 200 OK in 35ms (Views: 29.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 83ms (Views: 10.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 82ms (Views: 27.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 4ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-12 20:40:28 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (13.3ms)
Completed 200 OK in 32ms (Views: 26.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 82ms (Views: 7.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:40:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 41ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:41:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:41:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproduct(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 29ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:41:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproducts(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproducts(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (1.7ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 26ms (Views: 0.3ms | ActiveRecord: 9.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:42:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproducts(avail: false) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproducts(avail: false) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:42:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproducts(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproducts(avail: True) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:42:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproducts(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproducts(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:42:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproducts(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproducts(avail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 38ms (Views: 0.2ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:42:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproducts(avail: false) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproducts(avail: false) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:43:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproducts(allAvail: false) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproducts(allAvail: false) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 45ms (Views: 0.3ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 20:43:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allproducts(allAvail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  allproducts(allAvail: true) {\n    title\n    description\n    price\n    shipping\n    inventory_count\n    sold_count\n  }\n}\n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:04:03 -0500
  [1m[35m (2.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product() {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 19ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::CartItemsType):
  
app/graphql/types/query_type.rb:43:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:09:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 22ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateShoppingCart):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:09:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateShoppingCart):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:12:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (5.0ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
Completed 422 Unprocessable Entity in 101ms (ActiveRecord: 16.4ms)


  
ActiveRecord::RecordInvalid (Validation failed: Users must exist):
  
app/graphql/resolvers/create_shopping_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:14:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[36mShoppingCart Create (10.8ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 03:14:57.389474"], ["updated_at", "2019-01-13 03:14:57.389474"], ["user_id", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
Completed 200 OK in 49ms (Views: 0.3ms | ActiveRecord: 13.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:15:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    id,\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    id,\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:15:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[36mShoppingCart Create (0.5ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 03:15:29.068845"], ["updated_at", "2019-01-13 03:15:29.068845"], ["user_id", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:38:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[36mShoppingCart Create (0.9ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 03:38:24.141081"], ["updated_at", "2019-01-13 03:38:24.141081"], ["user_id", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
Completed 200 OK in 73ms (Views: 0.6ms | ActiveRecord: 8.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:38:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[36mShoppingCart Create (0.7ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 03:38:30.906455"], ["updated_at", "2019-01-13 03:38:30.906455"], ["user_id", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
Completed 200 OK in 9ms (Views: 0.5ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:38:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[36mShoppingCart Create (0.4ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 03:38:31.498186"], ["updated_at", "2019-01-13 03:38:31.498186"], ["user_id", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
Completed 200 OK in 16ms (Views: 0.5ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:38:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 1\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[36mShoppingCart Create (0.5ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 03:38:31.991979"], ["updated_at", "2019-01-13 03:38:31.991979"], ["user_id", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:38:34 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 2\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(\n    user_id: 2\n  ) {\n    user_id,\n    completed,\n    total_cost\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[36mShoppingCart Create (5.1ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 03:38:34.876288"], ["updated_at", "2019-01-13 03:38:34.876288"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
Completed 500 Internal Server Error in 10ms (ActiveRecord: 5.5ms)


  
ActiveRecord::InvalidForeignKey (PG::ForeignKeyViolation: ERROR:  insert or update on table "shopping_carts" violates foreign key constraint "fk_rails_8228391db2"
DETAIL:  Key (user_id)=(2) is not present in table "users".
: INSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"):
  
app/graphql/resolvers/create_shopping_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:41:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ) ", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ) ", "variables"=>nil}}
Completed 200 OK in 31ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:47:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ) ", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ) ", "variables"=>nil}}
Completed 500 Internal Server Error in 17ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/resolvers/purchase_by_id.rb:17: syntax error, unexpected ':', expecting '}'
        render {'error': 'error'}
                       ^
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/resolvers/purchase_by_id.rb:17: syntax error, unexpected '}', expecting keyword_end
...      render {'error': 'error'}
...                              ^):
  
app/graphql/resolvers/purchase_by_id.rb:17: syntax error, unexpected ':', expecting '}'
app/graphql/resolvers/purchase_by_id.rb:17: syntax error, unexpected '}', expecting keyword_end
app/graphql/types/mutation_type.rb:5:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:48:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ) ", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ) ", "variables"=>nil}}
Completed 200 OK in 30ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:49:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ){\n    title\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ){\n    title\n  }", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:50:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ){\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product: 1\n  ){\n    title\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:50:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.6ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 33], ["updated_at", "2019-01-13 03:50:13.670406"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (3.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 54ms (Views: 0.2ms | ActiveRecord: 14.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:50:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (1.4ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 32], ["updated_at", "2019-01-13 03:50:28.724426"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (1.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:50:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.4ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 31], ["updated_at", "2019-01-13 03:50:30.366321"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:50:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.3ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 30], ["updated_at", "2019-01-13 03:50:30.911061"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:50:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.4ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 29], ["updated_at", "2019-01-13 03:50:31.200249"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:51:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.3ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 28], ["updated_at", "2019-01-13 03:51:07.254524"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
Completed 500 Internal Server Error in 46ms (ActiveRecord: 4.0ms)


  
NoMethodError (undefined method `title' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:51:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.5ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 27], ["updated_at", "2019-01-13 03:51:35.614566"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 46ms (Views: 0.2ms | ActiveRecord: 5.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:51:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.4ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 26], ["updated_at", "2019-01-13 03:51:36.216733"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:51:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.3ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 25], ["updated_at", "2019-01-13 03:51:36.554184"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:51:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 1\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.4ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 24], ["updated_at", "2019-01-13 03:51:36.786180"], ["id", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:51:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 4\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 4\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.3ms)


  
NoMethodError (undefined method `inventory_count' for nil:NilClass):
  
app/graphql/resolvers/purchase_by_id.rb:16:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:52:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.2ms)


  
NoMethodError (undefined method `render' for #<Resolvers::PurchaseById:0x00007f8f80170130>):
  
app/graphql/resolvers/purchase_by_id.rb:17:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:52:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 2\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 2\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Update (0.3ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 19], ["updated_at", "2019-01-13 03:52:26.882202"], ["id", 2]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/purchase_by_id.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:52:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:53:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:53:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(product_id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(product_id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '4')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:53:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(product_id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(product_id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '4')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 3ms (Views: 0.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:53:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(product_id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(product_id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:53:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(product_id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(product_id: 4) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '4')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:53:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(product_id: 0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(product_id: 0) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '0')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:53:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(product_id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(product_id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:53:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(product_id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(product_id: 3) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '3')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:54:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.5ms)


  
NoMethodError (undefined method `render' for #<Resolvers::PurchaseById:0x00007f8f80170130>):
  
app/graphql/resolvers/purchase_by_id.rb:17:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:55:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product(id: 1) {\n    title\n    description\n    price\n    shipping \n    inventory_count\n    sold_count\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/resolvers/purchase_by_id.rb:17: syntax error, unexpected keyword_rescue
        rescue ActiveRecord::ProductNotAvai...
        ^~~~~~
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/resolvers/purchase_by_id.rb:17: syntax error, unexpected =>
...eRecord::ProductNotAvailable => e
...                             ^~):
  
app/graphql/resolvers/purchase_by_id.rb:17: syntax error, unexpected keyword_rescue
app/graphql/resolvers/purchase_by_id.rb:17: syntax error, unexpected =>
app/graphql/types/mutation_type.rb:5:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 48ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:57:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:22
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
Completed 200 OK in 41ms (Views: 0.2ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-12 22:59:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
Completed 200 OK in 37ms (Views: 0.3ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:21:54 -0500
  [1m[35m (2.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
Completed 200 OK in 53ms (Views: 0.3ms | ActiveRecord: 5.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 15:42:49 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (278.4ms)
Completed 200 OK in 303ms (Views: 297.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:42:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 107ms (Views: 7.5ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 15:43:06 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (9.7ms)
Completed 200 OK in 26ms (Views: 21.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:43:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 50ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 15:43:28 -0500
  [1m[35m (1.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (215.2ms)
Completed 200 OK in 236ms (Views: 228.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:43:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 61ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 15:44:33 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (6.6ms)
Completed 200 OK in 22ms (Views: 16.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:44:34 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `arguemnt' for Resolvers::AddToCart:Class
Did you mean?  argument):
  
app/graphql/resolvers/add_to_cart.rb:3:in `<class:AddToCart>'
app/graphql/resolvers/add_to_cart.rb:1:in `<main>'
app/graphql/types/mutation_type.rb:6:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 15:45:03 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (8.3ms)
Completed 200 OK in 25ms (Views: 19.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:45:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
NoMethodError (private method `Integer' called for #<GraphQL::Define::TypeDefiner:0x00007fcf44ce60d8>):
  
app/graphql/resolvers/add_to_cart.rb:5:in `<class:AddToCart>'
app/graphql/resolvers/add_to_cart.rb:1:in `<main>'
app/graphql/types/mutation_type.rb:6:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:45:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  purchase_by_id(\n    product_id: 3\n  ){\n    title,\n    inventory_count\n    \n  }\n}", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/purchase_by_id.rb:15
Completed 200 OK in 42ms (Views: 0.2ms | ActiveRecord: 4.8ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 15:45:24 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (8.5ms)
Completed 200 OK in 24ms (Views: 19.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:45:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 60ms (Views: 16.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:47:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tuser_id,\n      total_cost,\n      completed\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tuser_id,\n      total_cost,\n      completed\n\n    }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 22ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `ShoppingCartType' for #<Resolvers::AddToCart:0x00007fcf4a838620>):
  
app/graphql/resolvers/add_to_cart.rb:16:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:48:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `ShoppingCartType' for #<Resolvers::AddToCart:0x00007fcf4a838620>):
  
app/graphql/resolvers/add_to_cart.rb:16:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:48:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 63ms (ActiveRecord: 6.9ms)


  
NoMethodError (undefined method `quantity' for #<Product:0x00007fcf44c4e2d8>):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:49:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 51ms (ActiveRecord: 6.2ms)


  
NoMethodError (undefined method `quantity' for #<Product:0x00007fcf444c22f8>):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:49:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (4.8ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "13.47"], ["updated_at", "2019-01-13 20:49:38.151433"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (3.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
Completed 500 Internal Server Error in 96ms (ActiveRecord: 18.7ms)


  
NoMethodError (undefined method `ShoppingCartType' for #<Resolvers::AddToCart:0x00007fcf48027438>):
  
app/graphql/resolvers/add_to_cart.rb:25:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:49:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "13.47"], ["updated_at", "2019-01-13 20:49:58.078338"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 67ms (Views: 0.2ms | ActiveRecord: 9.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:50:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "13.47"], ["updated_at", "2019-01-13 20:50:23.117979"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 91ms (Views: 0.2ms | ActiveRecord: 10.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:51:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "13.47"], ["updated_at", "2019-01-13 20:51:36.030697"], ["id", 4]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 84ms (Views: 0.2ms | ActiveRecord: 9.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:53:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:4 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:4 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 37ms (ActiveRecord: 4.0ms)


  
NoMethodError (undefined method `inventory_count' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:54:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 18ms (ActiveRecord: 1.7ms)


  
NoMethodError (undefined method `quantity' for #<Product:0x00007fcf49a3c9e0>):
  
app/graphql/resolvers/add_to_cart.rb:19:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:54:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 49ms (ActiveRecord: 5.7ms)


  
NoMethodError (undefined method `quantity' for #<Product:0x00007fcf4b901bf0>):
  
app/graphql/resolvers/add_to_cart.rb:20:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:54:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 48ms (ActiveRecord: 5.2ms)


  
NoMethodError (undefined method `name' for #<Product:0x00007fcf4c1b6098>):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:54:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.4ms)


  
NoMethodError (undefined method `name' for #<Product:0x00007fcf44ea0f68>):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:54:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-13 20:54:48.761113"], ["id", 5]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
Completed 200 OK in 65ms (Views: 0.2ms | ActiveRecord: 12.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:55:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.4ms)


  
NoMethodError (undefined method `quantity' for #<Product:0x00007fcf4bfb5258>):
  
app/graphql/resolvers/add_to_cart.rb:20:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:55:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 200 OK in 44ms (Views: 0.2ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:56:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 200 OK in 54ms (Views: 0.2ms | ActiveRecord: 5.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:57:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:57:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-13 20:57:36.222235"], ["id", 6]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
Completed 200 OK in 31ms (Views: 0.2ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 15:57:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.4ms)


  
NoMethodError (undefined method `id' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (1.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (30.0ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (225.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (234.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (556.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (415.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (1.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 21:02:24.571383"], ["updated_at", "2019-01-13 21:02:24.571383"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 21:02:24.638394"], ["updated_at", "2019-01-13 21:02:24.638394"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-13 21:02:24.641528"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-13 21:02:24.684123"], ["updated_at", "2019-01-13 21:02:24.684123"]]
  â†³ db/seeds.rb:11
  [1m[35m (3.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-13 21:02:24.690635"], ["updated_at", "2019-01-13 21:02:24.690635"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-13 21:02:24.692507"], ["updated_at", "2019-01-13 21:02:24.692507"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (194.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (215.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (421.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (317.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 21:05:45.853652"], ["updated_at", "2019-01-13 21:05:45.853652"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 21:05:45.925429"], ["updated_at", "2019-01-13 21:05:45.925429"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-13 21:05:45.929644"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (201.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (215.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (354.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (348.5ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 21:06:11.974977"], ["updated_at", "2019-01-13 21:06:11.974977"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 21:06:12.044157"], ["updated_at", "2019-01-13 21:06:12.044157"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-13 21:06:12.048633"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.7ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-13 21:06:12.092145"], ["updated_at", "2019-01-13 21:06:12.092145"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-13 21:06:12.095176"], ["updated_at", "2019-01-13 21:06:12.095176"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-13 21:06:12.097143"], ["updated_at", "2019-01-13 21:06:12.097143"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-13 21:06:21.217156"], ["updated_at", "2019-01-13 21:06:21.217156"]]
  â†³ db/seeds.rb:11
  [1m[35m (14.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.7ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-13 21:06:21.234366"], ["updated_at", "2019-01-13 21:06:21.234366"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-13 21:06:21.237195"], ["updated_at", "2019-01-13 21:06:21.237195"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:06:50 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:33: syntax error, unexpected tIDENTIFIER, expecting ')'
...art.find_by(args[:user_id].id)_
...                              ^):
  
app/graphql/types/query_type.rb:33: syntax error, unexpected tIDENTIFIER, expecting ')'
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:07:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 69ms (ActiveRecord: 5.9ms)


  
NoMethodError (undefined method `id' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:08:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 48ms (ActiveRecord: 4.9ms)


  
NoMethodError (undefined method `id' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:09:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 37ms (ActiveRecord: 4.8ms)


  
NoMethodError (undefined method `id' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:09:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 43ms (ActiveRecord: 4.6ms)


  
NoMethodError (undefined method `id' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:09:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 41ms (ActiveRecord: 5.2ms)


  
NoMethodError (undefined method `ID' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:10:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
Completed 500 Internal Server Error in 37ms (ActiveRecord: 2.6ms)


  
NameError (undefined local variable or method `user_id' for #<Resolvers::AddToCart:0x00007f8f0c72ecf8>):
  
app/graphql/resolvers/add_to_cart.rb:20:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:18:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 61ms (ActiveRecord: 8.8ms)


  
NameError (undefined local variable or method `shopping_cart' for #<Resolvers::AddToCart:0x00007f8f0d38db70>):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:23:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 65ms (ActiveRecord: 10.5ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:24:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (2.5ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 21:24:36.676581"], ["updated_at", "2019-01-13 21:24:36.676581"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 39ms (Views: 0.3ms | ActiveRecord: 5.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:24:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-13 21:24:45.573500"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 36ms (Views: 0.2ms | ActiveRecord: 8.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:29:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-13 21:29:31.033828"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 65ms (Views: 0.2ms | ActiveRecord: 9.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:30:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.9ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:32:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 61ms (ActiveRecord: 8.6ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:33:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 57ms (ActiveRecord: 7.2ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:33:56 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 110ms (ActiveRecord: 8.6ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:36:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 52ms (ActiveRecord: 7.1ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:41:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 56ms (ActiveRecord: 7.4ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:46:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 58ms (ActiveRecord: 8.9ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:47:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 52ms (ActiveRecord: 7.1ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 16:50:54 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (239.3ms)
Completed 200 OK in 268ms (Views: 256.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:50:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 110ms (Views: 11.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 16:50:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.6ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.8ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 57ms (ActiveRecord: 10.6ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:12:45 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 47ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Schema):
  
app/graphql/shopiy_backend_rails_schema.rb:6:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:13:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 91ms (Views: 0.9ms | ActiveRecord: 9.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:13:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 67ms (ActiveRecord: 7.7ms)


  
NameError (undefined local variable or method `args' for #<GraphQL::Errors:0x00007fc9ecbf0398>):
  
app/graphql/shopiy_backend_rails_schema.rb:16:in `block (2 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:14:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 57ms (Views: 0.2ms | ActiveRecord: 5.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:15:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 68ms (Views: 0.2ms | ActiveRecord: 6.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:24:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 61ms (Views: 0.2ms | ActiveRecord: 9.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:24:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 3\n  product_id:2 \n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (3.0ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 1\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.6ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 22:25:32.184191"], ["updated_at", "2019-01-13 22:25:32.184191"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (6.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 21ms (Views: 0.2ms | ActiveRecord: 8.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "28.47"], ["updated_at", "2019-01-13 22:25:37.866456"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 4.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-13 22:25:40.840829"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "39.96"], ["updated_at", "2019-01-13 22:25:44.604387"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-13 22:25:46.335284"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "51.45"], ["updated_at", "2019-01-13 22:25:47.097230"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-13 22:25:47.668450"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "62.94"], ["updated_at", "2019-01-13 22:25:48.211720"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-13 22:25:48.798042"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "74.43"], ["updated_at", "2019-01-13 22:25:49.369706"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-13 22:25:49.889086"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "85.92"], ["updated_at", "2019-01-13 22:25:50.484147"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "68.94"], ["updated_at", "2019-01-13 22:25:51.011048"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "97.41"], ["updated_at", "2019-01-13 22:25:51.814164"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "80.43"], ["updated_at", "2019-01-13 22:25:52.402513"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "108.9"], ["updated_at", "2019-01-13 22:25:52.979687"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "91.92"], ["updated_at", "2019-01-13 22:25:53.508500"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "120.39"], ["updated_at", "2019-01-13 22:25:54.541464"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "103.41"], ["updated_at", "2019-01-13 22:25:55.127337"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "131.88"], ["updated_at", "2019-01-13 22:25:55.723715"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:25:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "114.9"], ["updated_at", "2019-01-13 22:25:56.379150"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:26:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "143.37"], ["updated_at", "2019-01-13 22:26:23.216157"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:29:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "126.39"], ["updated_at", "2019-01-13 22:29:21.941557"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:29:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "154.86"], ["updated_at", "2019-01-13 22:29:22.512637"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "137.88"], ["updated_at", "2019-01-13 22:37:30.094009"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 98ms (Views: 0.2ms | ActiveRecord: 15.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "166.35"], ["updated_at", "2019-01-13 22:37:30.669882"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "149.37"], ["updated_at", "2019-01-13 22:37:31.176019"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "177.84"], ["updated_at", "2019-01-13 22:37:31.584861"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "160.86"], ["updated_at", "2019-01-13 22:37:32.046449"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 17ms (Views: 1.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "189.33"], ["updated_at", "2019-01-13 22:37:32.474493"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "172.35"], ["updated_at", "2019-01-13 22:37:32.927216"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "200.82"], ["updated_at", "2019-01-13 22:37:33.359561"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "183.84"], ["updated_at", "2019-01-13 22:37:35.039347"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "212.31"], ["updated_at", "2019-01-13 22:37:35.451517"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "195.33"], ["updated_at", "2019-01-13 22:37:35.681382"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "223.8"], ["updated_at", "2019-01-13 22:37:35.855982"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "206.82"], ["updated_at", "2019-01-13 22:37:36.021358"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "235.29"], ["updated_at", "2019-01-13 22:37:36.178474"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "218.31"], ["updated_at", "2019-01-13 22:37:36.335611"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "246.78"], ["updated_at", "2019-01-13 22:37:36.500400"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "229.8"], ["updated_at", "2019-01-13 22:37:37.428653"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:37:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "258.27"], ["updated_at", "2019-01-13 22:37:38.519207"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.1ms)


  [1m[35m (46.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (84.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (210.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (193.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (545.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (431.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 22:38:22.243853"], ["updated_at", "2019-01-13 22:38:22.243853"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (6.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (4.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (2.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-13 22:38:22.321291"], ["updated_at", "2019-01-13 22:38:22.321291"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-13 22:38:22.324996"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.8ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-13 22:38:22.366171"], ["updated_at", "2019-01-13 22:38:22.366171"]]
  â†³ db/seeds.rb:11
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-13 22:38:22.371923"], ["updated_at", "2019-01-13 22:38:22.371923"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-13 22:38:22.373709"], ["updated_at", "2019-01-13 22:38:22.373709"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-13 22:38:29.814844"], ["updated_at", "2019-01-13 22:38:29.814844"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-13 22:38:29.818311"], ["updated_at", "2019-01-13 22:38:29.818311"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-13 22:38:29.820610"], ["updated_at", "2019-01-13 22:38:29.820610"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:38:39 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (231.4ms)
Completed 200 OK in 253ms (Views: 244.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:38:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 134ms (Views: 13.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:38:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.9ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-13 22:38:50.468079"], ["updated_at", "2019-01-13 22:38:50.468079"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 22ms (Views: 0.2ms | ActiveRecord: 5.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-13 22:39:33.239312"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 56ms (Views: 0.2ms | ActiveRecord: 7.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-13 22:39:45.801167"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-13 22:39:48.676420"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-13 22:39:49.908245"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 13ms (Views: 0.4ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-13 22:39:51.365551"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 14ms (Views: 0.3ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "68.94"], ["updated_at", "2019-01-13 22:39:52.582333"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.7ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "80.43"], ["updated_at", "2019-01-13 22:39:53.746445"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 14ms (Views: 0.6ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "91.92"], ["updated_at", "2019-01-13 22:39:54.838583"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "103.41"], ["updated_at", "2019-01-13 22:39:56.324413"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "114.9"], ["updated_at", "2019-01-13 22:39:57.299961"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 14ms (Views: 0.9ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "126.39"], ["updated_at", "2019-01-13 22:39:58.309638"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:39:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "137.88"], ["updated_at", "2019-01-13 22:39:59.485900"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:40:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "149.37"], ["updated_at", "2019-01-13 22:40:00.365234"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:40:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "160.86"], ["updated_at", "2019-01-13 22:40:01.088987"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:40:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "172.35"], ["updated_at", "2019-01-13 22:40:01.648268"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:40:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "183.84"], ["updated_at", "2019-01-13 22:40:02.128169"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:40:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "195.33"], ["updated_at", "2019-01-13 22:40:10.683770"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:43:47 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (12.8ms)
Completed 200 OK in 31ms (Views: 24.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:43:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/mutation_type.rb:7: syntax error, unexpected tCONSTANT, expecting keyword_do or '{' or '('
...ck_out_cart, function Resolvers::CheckOutCart.new
...                      ^~~~~~~~~):
  
app/graphql/types/mutation_type.rb:7: syntax error, unexpected tCONSTANT, expecting keyword_do or '{' or '('
app/graphql/shopiy_backend_rails_schema.rb:2:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:44:23 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (13.8ms)
Completed 200 OK in 32ms (Views: 26.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:44:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 89ms (Views: 9.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:44:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (3.8ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."user_id" = $1 LIMIT $2[0m  [["user_id", "2"], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 12ms (ActiveRecord: 5.0ms)


  
ActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column cart_items.user_id does not exist
LINE 1: SELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"....
                                                       ^
: SELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."user_id" = $1 LIMIT $2):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:45:53 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (11.7ms)
Completed 200 OK in 27ms (Views: 22.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:45:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 88ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:45:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:46:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 200 OK in 46ms (Views: 0.2ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:49:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 44ms (ActiveRecord: 1.3ms)


  
NoMethodError (undefined method `each' for nil:NilClass):
  
app/graphql/resolvers/check_out_cart.rb:15:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 17:58:18 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (17.5ms)
Completed 200 OK in 33ms (Views: 27.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:58:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 97ms (Views: 15.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:58:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (1.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
Completed 200 OK in 29ms (Views: 0.2ms | ActiveRecord: 10.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:58:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
Completed 500 Internal Server Error in 57ms (ActiveRecord: 5.5ms)


  
NoMethodError (undefined method `compeleted=' for #<ShoppingCart:0x00007fc4a51c2548>
Did you mean?  completed=
               completed
               completed?):
  
app/graphql/resolvers/check_out_cart.rb:27:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 17:59:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[36mShoppingCart Update (0.6ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", true], ["updated_at", "2019-01-13 22:59:05.483810"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:32
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "total_cost" = $2, "updated_at" = $3 WHERE "shopping_carts"."id" = $4[0m  [["completed", false], ["total_cost", "0.0"], ["updated_at", "2019-01-13 22:59:05.488163"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:32
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:32
Completed 500 Internal Server Error in 72ms (ActiveRecord: 7.8ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:03:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
Completed 500 Internal Server Error in 103ms (ActiveRecord: 10.8ms)


  
NameError (uninitialized constant Resolvers::CheckOutCart::True):
  
app/graphql/resolvers/check_out_cart.rb:27:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:03:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", true], ["updated_at", "2019-01-14 02:03:52.868563"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:32
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", false], ["updated_at", "2019-01-14 02:03:52.874571"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:32
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:32
Completed 200 OK in 62ms (Views: 0.3ms | ActiveRecord: 11.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:04:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", true], ["updated_at", "2019-01-14 02:04:09.624985"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:32
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", false], ["updated_at", "2019-01-14 02:04:09.627820"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:32
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:32
Completed 500 Internal Server Error in 64ms (ActiveRecord: 6.9ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:08:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", true], ["updated_at", "2019-01-14 02:08:37.248352"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", false], ["updated_at", "2019-01-14 02:08:37.250929"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:30
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:30
Completed 500 Internal Server Error in 62ms (ActiveRecord: 6.8ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:12:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", true], ["updated_at", "2019-01-14 02:12:58.946226"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", false], ["updated_at", "2019-01-14 02:12:58.949701"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:30
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:30
Completed 500 Internal Server Error in 63ms (ActiveRecord: 8.3ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:13:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
Completed 500 Internal Server Error in 61ms (ActiveRecord: 6.1ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:13:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.1ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:28
Completed 500 Internal Server Error in 49ms (ActiveRecord: 4.8ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:14:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.1ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
Completed 500 Internal Server Error in 51ms (ActiveRecord: 5.2ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:14:57 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
Completed 500 Internal Server Error in 93ms (ActiveRecord: 9.4ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:17:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:17:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:17:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:17:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:17:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 254ms (ActiveRecord: 0.0ms)


  
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:17:53 -0500
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:17:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 398ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Completed 500 Internal Server Error in 385ms (ActiveRecord: 0.0ms)


  
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:17:53 -0500
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 740ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:18:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input):
  
app/graphql/shopiy_backend_rails_schema.rb:14: syntax error, unexpected tXSTRING_BEG, expecting keyword_end
app/graphql/shopiy_backend_rails_schema.rb:18: syntax error, unexpected tXSTRING_BEG, expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:18:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:29
Completed 500 Internal Server Error in 64ms (ActiveRecord: 7.8ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:44:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
Completed 200 OK in 108ms (Views: 0.5ms | ActiveRecord: 9.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:45:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(\n  product_id: 2\n  ){\tinventory_count,\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(\n  product_id: 2\n  ){\tinventory_count,\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '2')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 28ms (Views: 0.2ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:46:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  product_by_id(\n  product_id: 1\n  ){\tinventory_count,\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  product_by_id(\n  product_id: 1\n  ){\tinventory_count,\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (id= '1')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:46:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:46:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:46:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:26
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:27
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:47:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:28
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
Completed 200 OK in 56ms (Views: 0.2ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:48:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:30
Completed 200 OK in 59ms (Views: 0.2ms | ActiveRecord: 5.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:49:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 02:49:35.370807"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 48ms (Views: 0.2ms | ActiveRecord: 5.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:49:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 02:49:36.346742"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:49:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 02:49:37.248682"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:49:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:30
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:50:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 02:50:18.923912"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:50:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-14 02:50:19.898035"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:50:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "68.94"], ["updated_at", "2019-01-14 02:50:21.744688"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:50:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "80.43"], ["updated_at", "2019-01-14 02:50:22.608664"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:52:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.1ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:31
Completed 200 OK in 62ms (Views: 0.2ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:52:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "91.92"], ["updated_at", "2019-01-14 02:52:29.483644"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 27ms (Views: 0.2ms | ActiveRecord: 4.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:52:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 ORDER BY "cart_items"."id" ASC LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1000]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:29
  [1m[36mCACHE ShoppingCart Load (0.0ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:31
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:55:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'cart_items'):
  
app/graphql/types/query_type.rb:33:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (211.0ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (161.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (514.9ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (370.7ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (6.0ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 02:56:21.809994"], ["updated_at", "2019-01-14 02:56:21.809994"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 02:56:21.874700"], ["updated_at", "2019-01-14 02:56:21.874700"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-14 02:56:21.879233"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.7ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 02:56:21.918104"], ["updated_at", "2019-01-14 02:56:21.918104"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 02:56:21.920975"], ["updated_at", "2019-01-14 02:56:21.920975"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 02:56:21.922904"], ["updated_at", "2019-01-14 02:56:21.922904"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (197.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (215.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (409.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (408.8ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 02:57:19.351028"], ["updated_at", "2019-01-14 02:57:19.351028"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 02:57:19.416674"], ["updated_at", "2019-01-14 02:57:19.416674"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-14 02:57:19.420960"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.8ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 02:57:19.452594"], ["updated_at", "2019-01-14 02:57:19.452594"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 02:57:19.455252"], ["updated_at", "2019-01-14 02:57:19.455252"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 02:57:19.456951"], ["updated_at", "2019-01-14 02:57:19.456951"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:57:27 -0500
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 65ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'cart_items'):
  
app/graphql/types/query_type.rb:33:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 21:59:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 50ms (ActiveRecord: 8.9ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:00:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.9ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 03:00:14.809861"], ["updated_at", "2019-01-14 03:00:14.809861"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 18ms (Views: 0.3ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:00:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 03:00:26.567472"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:00:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 03:00:33.439127"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:04:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 03:04:21.738120"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 94ms (Views: 0.2ms | ActiveRecord: 12.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:04:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.6ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1 LIMIT $2[0m  [["shopping_carts_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.6ms)


  
NoMethodError (undefined method `find_each' for nil:NilClass):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:08:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 44ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:39:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 42ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/resolvers/check_out_cart.rb:34: syntax error, unexpected keyword_end, expecting end-of-input
  end
  ^~~):
  
app/graphql/resolvers/check_out_cart.rb:34: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/types/mutation_type.rb:7:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:39:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (4.6ms)[0m  [1m[34mSELECT SUM(quantity) FROM cart_items
            WHERE shopping_cart_id =[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 49ms (ActiveRecord: 4.6ms)


  
ActiveRecord::StatementInvalid (PG::SyntaxError: ERROR:  syntax error at end of input
LINE 2:             WHERE shopping_cart_id =
                                            ^
: SELECT SUM(quantity) FROM cart_items
            WHERE shopping_cart_id =):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:42:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 49ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `empty?' for nil:NilClass):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:44:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (6.3ms)[0m  [1m[34mSELECT SUM(quantity) FROM cart_items
            WHERE shopping_cart_id = [0m
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 54ms (ActiveRecord: 6.3ms)


  
ActiveRecord::StatementInvalid (PG::SyntaxError: ERROR:  syntax error at end of input
LINE 2:             WHERE shopping_cart_id = 
                                             ^
: SELECT SUM(quantity) FROM cart_items
            WHERE shopping_cart_id = ):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:45:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 43ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `user_id' for #<Resolvers::CheckOutCart:0x00007fcd6bf88460>):
  
app/graphql/resolvers/check_out_cart.rb:15:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:52:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 53ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `user_id' for #<Resolvers::CheckOutCart:0x00007fcd6c12e8a0>):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:52:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 42ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `user_id' for #<Resolvers::CheckOutCart:0x00007fcd6c69e470>):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:52:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[35m (6.0ms)[0m  [1m[34mSELECT SUM("cart_items"."quantity") FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", "2"]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 53ms (ActiveRecord: 9.6ms)


  
ActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column cart_items.shopping_cart_id does not exist
LINE 1: ...("cart_items"."quantity") FROM "cart_items" WHERE "cart_item...
                                                             ^
HINT:  Perhaps you meant to reference the column "cart_items.shopping_carts_id".
: SELECT SUM("cart_items"."quantity") FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1):
  
app/graphql/resolvers/check_out_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:53:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[35m (1.3ms)[0m  [1m[34mSELECT SUM("cart_items"."quantity") FROM "cart_items" WHERE "cart_items"."shopping_carts_id" = $1[0m  [["shopping_carts_id", 2]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 48ms (ActiveRecord: 2.5ms)


  
NameError (undefined local variable or method `cart_item' for #<Resolvers::CheckOutCart:0x00007fcd6c997370>):
  
app/graphql/resolvers/check_out_cart.rb:16:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:54:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'cart_items'):
  
app/graphql/types/query_type.rb:33:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:54:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 03:54:16.100352"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 49ms (Views: 0.3ms | ActiveRecord: 11.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:54:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'cart_items'):
  
app/graphql/types/query_type.rb:33:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:55:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 36ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'cart_items'):
  
app/graphql/types/query_type.rb:33:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (1.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (177.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (209.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (506.9ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (424.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (6.7ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 03:56:59.847676"], ["updated_at", "2019-01-14 03:56:59.847676"]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (6.7ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 03:56:59.911762"], ["updated_at", "2019-01-14 03:56:59.911762"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.5ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-14 03:56:59.916042"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 03:56:59.967923"], ["updated_at", "2019-01-14 03:56:59.967923"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 03:56:59.973718"], ["updated_at", "2019-01-14 03:56:59.973718"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 03:56:59.977060"], ["updated_at", "2019-01-14 03:56:59.977060"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 22:57:26 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (217.8ms)
Completed 200 OK in 239ms (Views: 229.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:57:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 130ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:57:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 61ms (ActiveRecord: 11.7ms)


  
NoMethodError (undefined method `total_cost' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:22:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:57:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.9ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 03:57:50.258469"], ["updated_at", "2019-01-14 03:57:50.258469"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 16ms (Views: 0.3ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:58:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 03:58:02.729120"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 21ms (Views: 0.3ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:58:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'cart_items'):
  
app/graphql/types/query_type.rb:33:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:58:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 42ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `id' for "2":String):
  
app/graphql/types/query_type.rb:33:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 22:59:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/types/query_type.rb:33: syntax error, unexpected ')', expecting '}'
...carts_id = ? ",args[:user_id]))
...                              ^):
  
app/graphql/types/query_type.rb:33: syntax error, unexpected ')', expecting '}'
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:00:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE (shopping_carts_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 50ms (Views: 0.2ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:00:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 04:00:22.931358"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 40ms (Views: 0.3ms | ActiveRecord: 8.8ms)


  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (184.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (197.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (478.9ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (433.5ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 04:01:58.466549"], ["updated_at", "2019-01-14 04:01:58.466549"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (3.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 04:01:58.529359"], ["updated_at", "2019-01-14 04:01:58.529359"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-14 04:01:58.533501"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.8ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 04:01:58.569747"], ["updated_at", "2019-01-14 04:01:58.569747"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 04:01:58.572555"], ["updated_at", "2019-01-14 04:01:58.572555"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 04:01:58.574246"], ["updated_at", "2019-01-14 04:01:58.574246"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 23:02:03 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (219.7ms)
Completed 200 OK in 241ms (Views: 232.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:02:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 134ms (Views: 9.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:02:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.9ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 04:02:12.073847"], ["updated_at", "2019-01-14 04:02:12.073847"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 22ms (Views: 0.2ms | ActiveRecord: 5.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:02:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 04:02:16.221761"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
Completed 200 OK in 72ms (Views: 0.5ms | ActiveRecord: 8.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:02:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE (shopping_carts_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:04:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE (shopping_carts_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 44ms (Views: 0.2ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:04:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 04:04:18.385879"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
Completed 200 OK in 45ms (Views: 0.2ms | ActiveRecord: 9.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:05:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 04:05:00.788934"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 80ms (Views: 0.2ms | ActiveRecord: 9.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:07:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 04:07:32.554742"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 99ms (Views: 0.2ms | ActiveRecord: 10.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:07:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE (shopping_carts_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:08:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE (shopping_carts_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 47ms (Views: 0.2ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:08:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-14 04:08:10.529739"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
Completed 200 OK in 44ms (Views: 0.2ms | ActiveRecord: 9.3ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 23:11:36 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (15.3ms)
Completed 200 OK in 31ms (Views: 25.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:11:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 165ms (Views: 7.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:11:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 48ms (Views: 0.5ms | ActiveRecord: 11.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:12:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.4ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 04:12:10.231967"], ["updated_at", "2019-01-14 04:12:10.231967"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:12:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    user_id,\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    user_id,\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.3ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("completed", "total_cost", "created_at", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 04:12:19.633023"], ["updated_at", "2019-01-14 04:12:19.633023"], ["user_id", 2]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:12:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:13:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tuser_id\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tuser_id\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:13:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:14:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 113ms (ActiveRecord: 7.1ms)


  
NoMethodError (undefined method `CartItem' for #<ShoppingCart:0x00007fee72612958>
Did you mean?  cart_item
               cart_item=):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:15:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 87ms (ActiveRecord: 9.2ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'shopping_cart_id' for CartItem.):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:19:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 71ms (ActiveRecord: 7.9ms)


  
NoMethodError (undefined method `cart_items' for #<ShoppingCart:0x00007fee723bd3b0>
Did you mean?  cart_item
               cart_item=
               cart_item_ids):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:22:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 84ms (ActiveRecord: 5.1ms)


  
NoMethodError (undefined method `cartitems' for #<ShoppingCart:0x00007fee728f4c20>
Did you mean?  cart_item
               cart_item=):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:24:34 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 73ms (ActiveRecord: 6.4ms)


  
NoMethodError (undefined method `cart_items' for #<ShoppingCart:0x00007fee724fd950>
Did you mean?  cart_item
               cart_item=
               cart_item_ids):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:27:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 64ms (ActiveRecord: 6.0ms)


  
NoMethodError (undefined method `cartitems' for #<ShoppingCart:0x00007fee7924af80>
Did you mean?  cart_item
               cart_item=):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:27:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Load (3.9ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 LIMIT $2[0m  [["shopping_cart_id", 1], ["LIMIT", 11]]
  â†³ /Users/ray/.rvm/rubies/ruby-2.5.2/lib/ruby/gems/2.5.0/gems/did_you_mean-1.2.0/lib/did_you_mean/core_ext/name_error.rb:8
Completed 500 Internal Server Error in 71ms (ActiveRecord: 6.5ms)


  
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 LIMIT $2[0m  [["shopping_cart_id", 1], ["LIMIT", 11]]
  â†³ /Users/ray/.rvm/rubies/ruby-2.5.2/lib/ruby/gems/2.5.0/gems/did_you_mean-1.2.0/lib/did_you_mean/core_ext/name_error.rb:8
NoMethodError (undefined method `create_item' for #<CartItem::ActiveRecord_Associations_CollectionProxy:0x00007fee7974b958>
Did you mean?  create_with
               create_with!):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:27:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 67ms (ActiveRecord: 7.7ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'shopping_cart_id' for CartItem.):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:29:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 154ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:29:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 36ms (ActiveRecord: 7.2ms)


  
NoMethodError (undefined method `cartitems' for #<ShoppingCart:0x00007fee7a5ec570>
Did you mean?  cart_item
               cart_item=):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:30:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 69ms (ActiveRecord: 5.1ms)


  
NoMethodError (undefined method `cart_items' for #<ShoppingCart:0x00007fee73fd2190>
Did you mean?  cart_item
               cart_item=
               cart_item_ids):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:30:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 74ms (ActiveRecord: 7.2ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'shopping_cart_id' for CartItem.):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:33:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 74ms (ActiveRecord: 8.0ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'shopping_cart_id' for CartItem.):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:33:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 75ms (ActiveRecord: 7.5ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'shoppings_cart_id' for CartItem.):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:33:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 70ms (ActiveRecord: 6.8ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'shopping_cart_id' for CartItem.):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:49:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 159ms (ActiveRecord: 13.5ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'shopping_cart_id' for CartItem.):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-13 23:50:17 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (18.2ms)
Completed 200 OK in 36ms (Views: 30.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:50:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 88ms (Views: 7.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:50:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 39ms (ActiveRecord: 9.2ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'shopping_cart_id' for CartItem.):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (152.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (208.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (498.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (412.2ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (8.0ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (2.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 04:52:02.899597"], ["updated_at", "2019-01-14 04:52:02.899597"]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (6.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_carts_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.0ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (0.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_1dbf0d3287"
FOREIGN KEY ("shopping_carts_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 04:52:02.964111"], ["updated_at", "2019-01-14 04:52:02.964111"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-14 04:52:02.968723"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.9ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 04:52:03.013712"], ["updated_at", "2019-01-14 04:52:03.013712"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 04:52:03.016776"], ["updated_at", "2019-01-14 04:52:03.016776"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 04:52:03.019093"], ["updated_at", "2019-01-14 04:52:03.019093"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (210.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (206.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (463.5ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (385.5ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (8.7ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_carts_id" ON "cart_items"  ("shopping_carts_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (180.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (171.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (431.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (373.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ bin/rails:4
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateProducts (20190109031841)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109031841_create_products.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109031841"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateShoppingCarts (20190109032351)
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032351_create_shopping_carts.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032351"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateCartItems (20190109034233)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109034233_create_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109034233"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to AddCartIdRefToCartItems (20190109194701)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "shopping_cart_id" bigint[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109194701"]]
  â†³ bin/rails:4
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to AddProductRefToCartItems (20190109195636)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "product_id" bigint[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[35m (1.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109195636"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Create (1.0ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 04:55:42.872134"], ["updated_at", "2019-01-14 04:55:42.872134"]]
  â†³ bin/rails:4
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.8ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 04:56:00.879005"], ["updated_at", "2019-01-14 04:56:00.879005"]]
  â†³ db/seeds.rb:11
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 04:56:00.885607"], ["updated_at", "2019-01-14 04:56:00.885607"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.7ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 04:56:00.888358"], ["updated_at", "2019-01-14 04:56:00.888358"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:56:30 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (2.0ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 04:56:30.624171"], ["updated_at", "2019-01-14 04:56:30.624171"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 90ms (Views: 0.5ms | ActiveRecord: 5.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:56:34 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (2.3ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 04:56:34.737365"], ["updated_at", "2019-01-14 04:56:34.737365"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
Completed 500 Internal Server Error in 54ms (ActiveRecord: 9.3ms)


  
NameError (undefined local variable or method `shopping_cart' for #<Resolvers::AddToCart:0x00007fe516945ba8>):
  
app/graphql/resolvers/add_to_cart.rb:23:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:57:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.4ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 04:57:06.386856"], ["updated_at", "2019-01-14 04:57:06.386856"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 04:57:06.389051"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 83ms (Views: 0.3ms | ActiveRecord: 12.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:57:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tuser_id\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tuser_id\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 45ms (Views: 0.2ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:57:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (2.7ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE (shopping_carts_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 500 Internal Server Error in 7ms (ActiveRecord: 2.7ms)


  
ActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column "shopping_carts_id" does not exist
LINE 1: SELECT "cart_items".* FROM "cart_items" WHERE (shopping_cart...
                                                       ^
HINT:  Perhaps you meant to reference the column "cart_items.shopping_cart_id".
: SELECT "cart_items".* FROM "cart_items" WHERE (shopping_carts_id = '2' )):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-13 23:57:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE (shopping_cart_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 38ms (Views: 0.2ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:02:00 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 49ms (ActiveRecord: 0.0ms)


  
ActiveRecord::ConfigurationError (Can't join 'ShoppingCart' to association named 'CartItem'; perhaps you misspelled it?):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:04:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\tproduct_id,\n\t\t\tquantity\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" INNER JOIN "cart_items" ON "cart_items"."shopping_cart_id" = "shopping_carts"."id" WHERE (shopping_cart_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 55ms (Views: 0.2ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:05:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.9ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 05:05:11.479239"], ["updated_at", "2019-01-14 05:05:11.479239"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 05:05:11.483564"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 47ms (Views: 0.2ms | ActiveRecord: 8.7ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-14 00:17:48 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (248.1ms)
Completed 200 OK in 270ms (Views: 260.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:17:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Schema can't define 'enable_preloading'):
  
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-14 00:32:55 -0500
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (238.3ms)
Completed 200 OK in 259ms (Views: 250.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:32:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 178ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `current_user' for #<GraphqlController:0x00007ff55e30e660>):
  
app/controllers/graphql_controller.rb:7:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-14 00:33:57 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (9.7ms)
Completed 200 OK in 28ms (Views: 23.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:33:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 14ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Schema can't define 'enable_preloading'):
  
app/graphql/shopiy_backend_rails_schema.rb:3:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:37:27 -0500
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Schema can't define 'enable_preloading'):
  
app/graphql/shopiy_backend_rails_schema.rb:4:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:8:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-14 00:38:47 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (219.3ms)
Completed 200 OK in 241ms (Views: 231.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:38:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 138ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:38:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (1.2ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 05:38:53.037836"], ["updated_at", "2019-01-14 05:38:53.037836"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 05:38:53.044021"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 72ms (Views: 0.2ms | ActiveRecord: 16.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 00:40:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 22ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:56:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 62ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/resolvers/add_to_cart.rb:30: syntax error, unexpected keyword_end, expecting end-of-input
  end
  ^~~):
  
app/graphql/resolvers/add_to_cart.rb:30: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/types/mutation_type.rb:6:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:56:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.9ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (1.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 73ms (Views: 0.4ms | ActiveRecord: 12.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:57:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 58ms (Views: 0.2ms | ActiveRecord: 5.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:57:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:57:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:57:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\tcart_items{\n    product_id,\n    quantity\n  }\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:57:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.7ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 19:57:47.005254"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (4.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 31ms (Views: 0.2ms | ActiveRecord: 9.0ms)


  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (169.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (209.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (505.9ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (406.0ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (7.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 19:58:08.759122"], ["updated_at", "2019-01-14 19:58:08.759122"]]
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (6.5ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 19:58:08.835217"], ["updated_at", "2019-01-14 19:58:08.835217"]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-14 19:58:08.837737"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (1.1ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 19:58:08.874048"], ["updated_at", "2019-01-14 19:58:08.874048"]]
  â†³ db/seeds.rb:11
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 19:58:08.880555"], ["updated_at", "2019-01-14 19:58:08.880555"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 19:58:08.882623"], ["updated_at", "2019-01-14 19:58:08.882623"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 19:58:26.474057"], ["updated_at", "2019-01-14 19:58:26.474057"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 19:58:26.477063"], ["updated_at", "2019-01-14 19:58:26.477063"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 19:58:26.479776"], ["updated_at", "2019-01-14 19:58:26.479776"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:58:40 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.9ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 19:58:41.111807"], ["updated_at", "2019-01-14 19:58:41.111807"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 75ms (Views: 0.3ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:58:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (2.0ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 19:58:50.913584"], ["updated_at", "2019-01-14 19:58:50.913584"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 19:58:50.917548"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
Completed 200 OK in 50ms (Views: 0.2ms | ActiveRecord: 10.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:59:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 19:59:16.083432"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 22ms (Views: 0.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:59:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 19:59:17.261873"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:59:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 19:59:18.004583"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:59:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-14 19:59:18.557203"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:59:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "68.94"], ["updated_at", "2019-01-14 19:59:18.928180"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:59:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "80.43"], ["updated_at", "2019-01-14 19:59:19.282174"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 14:59:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "91.92"], ["updated_at", "2019-01-14 19:59:19.572889"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:00:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-14 20:00:14.749543"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "103.41"], ["updated_at", "2019-01-14 20:00:14.752699"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 79ms (Views: 0.3ms | ActiveRecord: 10.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:00:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-14 20:00:15.423856"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "114.9"], ["updated_at", "2019-01-14 20:00:15.427206"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.1ms)


  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (173.8ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (164.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (445.6ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (387.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.5ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 20:00:28.512831"], ["updated_at", "2019-01-14 20:00:28.512831"]]
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (4.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 20:00:28.584844"], ["updated_at", "2019-01-14 20:00:28.584844"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-14 20:00:28.588693"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.9ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 20:00:28.619212"], ["updated_at", "2019-01-14 20:00:28.619212"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 20:00:28.622206"], ["updated_at", "2019-01-14 20:00:28.622206"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 20:00:28.624025"], ["updated_at", "2019-01-14 20:00:28.624025"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 20:00:46.298556"], ["updated_at", "2019-01-14 20:00:46.298556"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 20:00:46.301389"], ["updated_at", "2019-01-14 20:00:46.301389"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 20:00:46.303463"], ["updated_at", "2019-01-14 20:00:46.303463"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:01:44 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 67ms (ActiveRecord: 5.4ms)


  
NoMethodError (undefined method `cart_items' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:04:19 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
Completed 500 Internal Server Error in 83ms (ActiveRecord: 4.6ms)


  
NameError (undefined local variable or method `shopping_cart' for #<Resolvers::AddToCart:0x00007fcd6687e8e0>):
  
app/graphql/resolvers/add_to_cart.rb:17:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:05:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 52ms (ActiveRecord: 4.4ms)


  
NoMethodError (undefined method `cart_items' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:05:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (1.0ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 20:05:37.148254"], ["updated_at", "2019-01-14 20:05:37.148254"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 13ms (Views: 0.3ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:05:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n    cart_items{\n      product_id\n    }\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n    cart_items{\n      product_id\n    }\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.4ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 20:05:47.809719"], ["updated_at", "2019-01-14 20:05:47.809719"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mCartItem Load (0.7ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (1.5ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 20:06:25.177925"], ["updated_at", "2019-01-14 20:06:25.177925"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 20:06:25.182642"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
Completed 200 OK in 87ms (Views: 0.2ms | ActiveRecord: 11.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.4ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 20:06:42.153815"], ["updated_at", "2019-01-14 20:06:42.153815"], ["shopping_cart_id", 2], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 20:06:42.156395"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.3ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-14 20:06:43.528519"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 20:06:43.531378"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-14 20:06:45.541428"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 20:06:45.544537"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-14 20:06:46.193860"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 20:06:46.196822"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-14 20:06:46.804230"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 20:06:46.807350"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-14 20:06:48.151042"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 20:06:48.153738"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-14 20:06:48.718054"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 20:06:48.720928"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-14 20:06:49.330147"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-14 20:06:49.333001"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-14 20:06:49.584786"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-14 20:06:49.587930"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 18], ["updated_at", "2019-01-14 20:06:49.741972"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "68.94"], ["updated_at", "2019-01-14 20:06:49.745219"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 18], ["updated_at", "2019-01-14 20:06:49.897397"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "68.94"], ["updated_at", "2019-01-14 20:06:49.900601"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 21], ["updated_at", "2019-01-14 20:06:50.030808"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "80.43"], ["updated_at", "2019-01-14 20:06:50.034409"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 21], ["updated_at", "2019-01-14 20:06:50.186442"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "80.43"], ["updated_at", "2019-01-14 20:06:50.189617"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 24], ["updated_at", "2019-01-14 20:06:50.337031"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "91.92"], ["updated_at", "2019-01-14 20:06:50.340464"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 24], ["updated_at", "2019-01-14 20:06:50.484744"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "91.92"], ["updated_at", "2019-01-14 20:06:50.488384"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 27], ["updated_at", "2019-01-14 20:06:51.531597"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "103.41"], ["updated_at", "2019-01-14 20:06:51.534608"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 27], ["updated_at", "2019-01-14 20:06:52.339973"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "103.41"], ["updated_at", "2019-01-14 20:06:52.343632"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 30], ["updated_at", "2019-01-14 20:06:55.041794"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "114.9"], ["updated_at", "2019-01-14 20:06:55.044678"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 30], ["updated_at", "2019-01-14 20:06:55.620298"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "114.9"], ["updated_at", "2019-01-14 20:06:55.623163"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:06:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 33], ["updated_at", "2019-01-14 20:06:56.337725"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "126.39"], ["updated_at", "2019-01-14 20:06:56.340859"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:29 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.4ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 20:07:30.101064"], ["updated_at", "2019-01-14 20:07:30.101064"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
Completed 200 OK in 71ms (Views: 0.3ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.7ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 33], ["updated_at", "2019-01-14 20:07:36.911782"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "126.39"], ["updated_at", "2019-01-14 20:07:36.915421"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 47ms (Views: 0.2ms | ActiveRecord: 9.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 36], ["updated_at", "2019-01-14 20:07:40.389155"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "137.88"], ["updated_at", "2019-01-14 20:07:40.392059"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 3], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.7ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 20:07:41.534322"], ["updated_at", "2019-01-14 20:07:41.534322"], ["shopping_cart_id", 3], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 20:07:41.538093"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 3]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 36], ["updated_at", "2019-01-14 20:07:45.271872"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "137.88"], ["updated_at", "2019-01-14 20:07:45.274710"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 39], ["updated_at", "2019-01-14 20:07:46.393729"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "149.37"], ["updated_at", "2019-01-14 20:07:46.396770"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 3], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-14 20:07:47.375605"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 20:07:47.378578"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 3]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 39], ["updated_at", "2019-01-14 20:07:48.613286"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "149.37"], ["updated_at", "2019-01-14 20:07:48.616006"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.6ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 42], ["updated_at", "2019-01-14 20:07:49.646898"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "160.86"], ["updated_at", "2019-01-14 20:07:49.650015"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 3], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-14 20:07:50.783716"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 20:07:50.786783"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 3]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 42], ["updated_at", "2019-01-14 20:07:51.691368"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "160.86"], ["updated_at", "2019-01-14 20:07:51.694200"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 45], ["updated_at", "2019-01-14 20:07:52.524829"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "172.35"], ["updated_at", "2019-01-14 20:07:52.527965"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 3], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-14 20:07:53.152856"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 20:07:53.156700"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 3]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 45], ["updated_at", "2019-01-14 20:07:53.738493"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "172.35"], ["updated_at", "2019-01-14 20:07:53.742135"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 21ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:07:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 48], ["updated_at", "2019-01-14 20:07:54.777366"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "183.84"], ["updated_at", "2019-01-14 20:07:54.780596"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.6ms)


  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (150.2ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (175.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (444.4ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (410.0ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 20:08:07.772232"], ["updated_at", "2019-01-14 20:08:07.772232"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.1ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 20:08:07.837302"], ["updated_at", "2019-01-14 20:08:07.837302"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.6ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-14 20:08:07.841057"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 20:08:07.871899"], ["updated_at", "2019-01-14 20:08:07.871899"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 20:08:07.874929"], ["updated_at", "2019-01-14 20:08:07.874929"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 20:08:07.878458"], ["updated_at", "2019-01-14 20:08:07.878458"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (204.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (198.6ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (363.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (391.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ bin/rails:4
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
Migrating to CreateProducts (20190109031841)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109031841_create_products.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109031841"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateShoppingCarts (20190109032351)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109032351_create_shopping_carts.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109032351"]]
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to CreateCartItems (20190109034233)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/migrate/20190109034233_create_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109034233"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to AddCartIdRefToCartItems (20190109194701)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (4.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "shopping_cart_id" bigint[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (0.7ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/migrate/20190109194701_add_cart_id_ref_to_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109194701"]]
  â†³ bin/rails:4
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
Migrating to AddProductRefToCartItems (20190109195636)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD "product_id" bigint[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/migrate/20190109195636_add_product_ref_to_cart_items.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20190109195636"]]
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Create (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-14 20:08:41.289401"], ["updated_at", "2019-01-14 20:08:41.289401"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4624053451962107940)[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.9ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-14 20:08:46.195818"], ["updated_at", "2019-01-14 20:08:46.195818"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-14 20:08:46.199053"], ["updated_at", "2019-01-14 20:08:46.199053"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-14 20:08:46.200993"], ["updated_at", "2019-01-14 20:08:46.200993"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:09:30 -0500
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.7ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-14 20:09:30.762971"], ["updated_at", "2019-01-14 20:09:30.762971"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 72ms (Views: 0.3ms | ActiveRecord: 6.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:10:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.8ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-14 20:10:21.519394"], ["updated_at", "2019-01-14 20:10:21.519394"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-14 20:10:21.521884"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 42ms (Views: 0.2ms | ActiveRecord: 7.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:14:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
Completed 500 Internal Server Error in 53ms (ActiveRecord: 2.9ms)


  
NameError (undefined local variable or method `product' for #<Resolvers::AddToCart:0x00007fb99f501cd8>
Did you mean?  proc):
  
app/graphql/resolvers/add_to_cart.rb:17:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:15:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
Completed 500 Internal Server Error in 47ms (ActiveRecord: 2.4ms)


  
NameError (undefined local variable or method `product' for #<Resolvers::AddToCart:0x00007fb9a4a7b718>
Did you mean?  proc):
  
app/graphql/resolvers/add_to_cart.rb:17:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:15:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
Completed 500 Internal Server Error in 52ms (ActiveRecord: 3.1ms)


  
NameError (undefined local variable or method `product' for #<Resolvers::AddToCart:0x00007fb99ee880c8>
Did you mean?  proc):
  
app/graphql/resolvers/add_to_cart.rb:17:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:15:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-14 20:15:46.457221"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-14 20:15:46.460358"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 78ms (Views: 0.3ms | ActiveRecord: 10.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:15:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-14 20:15:52.830055"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-14 20:15:52.833277"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:15:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-14 20:15:54.066526"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-14 20:15:54.069494"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 15:15:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-14 20:15:55.361545"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-14 20:15:55.364722"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-14 17:10:47 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (332.5ms)
Completed 200 OK in 351ms (Views: 343.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 17:10:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 24ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/ray/Documents/Development/Projects/QuickShop/app/graphql/resolvers/clear_cart.rb:22: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/graphql/resolvers/clear_cart.rb:22: syntax error, unexpected end-of-input, expecting keyword_end
app/graphql/types/mutation_type.rb:8:in `block in <main>'
app/graphql/shopiy_backend_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:8:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2019-01-14 17:11:29 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (8.2ms)
Completed 200 OK in 25ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 17:11:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 91ms (Views: 7.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 17:12:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 17:13:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 44ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 17:14:19 -0500
  [1m[35m (1.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 58ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 17:14:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 118ms (Views: 6.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 47ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 39ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(user_id: 2){\n    user_id,\n    cart_items,\n    completed\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:13:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (1.7ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (1.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (3.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 18], ["updated_at", "2019-01-15 00:13:58.995968"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "68.94"], ["updated_at", "2019-01-15 00:13:59.000610"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 95ms (Views: 0.2ms | ActiveRecord: 24.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:14:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.7ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:17
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:15:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.2ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 00:15:06.655850"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 73ms (Views: 0.2ms | ActiveRecord: 6.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:26:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.5ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[36mCartItem Create (0.7ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 00:26:30.843717"], ["updated_at", "2019-01-15 00:26:30.843717"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-15 00:26:30.848486"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 102ms (Views: 0.2ms | ActiveRecord: 16.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:26:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 00:26:54.066685"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-15 00:26:54.069539"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:28:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 59ms (ActiveRecord: 3.4ms)


  
NameError (undefined local variable or method `product' for #<Resolvers::AddToCart:0x00007fa11ba32ca8>
Did you mean?  proc):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:30:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
Completed 500 Internal Server Error in 37ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `find_by' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:16:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:30:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (6.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."product_id" = $1 LIMIT $2[0m  [["product_id", "1"], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
Completed 500 Internal Server Error in 50ms (ActiveRecord: 7.7ms)


  
ActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column products.product_id does not exist
LINE 1: SELECT  "products".* FROM "products" WHERE "products"."produ...
                                                   ^
: SELECT  "products".* FROM "products" WHERE "products"."product_id" = $1 LIMIT $2):
  
app/graphql/resolvers/add_to_cart.rb:16:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:33:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 00:33:25.378250"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-15 00:33:25.382437"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 95ms (Views: 0.2ms | ActiveRecord: 13.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:33:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 00:33:42.400053"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-15 00:33:42.402859"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 87ms (Views: 0.7ms | ActiveRecord: 10.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:33:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.9ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 00:33:50.019489"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:34:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.4ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 00:34:48.551675"], ["updated_at", "2019-01-15 00:34:48.551675"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "11.49"], ["updated_at", "2019-01-15 00:34:48.554694"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:35:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 00:35:09.624724"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "22.98"], ["updated_at", "2019-01-15 00:35:09.627479"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:35:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 00:35:11.033492"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "34.47"], ["updated_at", "2019-01-15 00:35:11.036835"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:35:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 00:35:11.742558"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "45.96"], ["updated_at", "2019-01-15 00:35:11.745214"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:35:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.2ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-15 00:35:25.812476"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "57.45"], ["updated_at", "2019-01-15 00:35:25.814779"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
Completed 500 Internal Server Error in 90ms (ActiveRecord: 10.0ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:35:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.2ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 18], ["updated_at", "2019-01-15 00:35:44.559852"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "68.94"], ["updated_at", "2019-01-15 00:35:44.562053"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 88ms (Views: 0.3ms | ActiveRecord: 9.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:35:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 21], ["updated_at", "2019-01-15 00:35:58.615866"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "80.43"], ["updated_at", "2019-01-15 00:35:58.618666"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:35:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 24], ["updated_at", "2019-01-15 00:35:59.151443"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "91.92"], ["updated_at", "2019-01-15 00:35:59.154539"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:35:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 27], ["updated_at", "2019-01-15 00:35:59.935986"], ["id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "103.41"], ["updated_at", "2019-01-15 00:35:59.939213"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:36:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.4ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 00:36:33.665076"], ["updated_at", "2019-01-15 00:36:33.665076"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "111.9"], ["updated_at", "2019-01-15 00:36:33.668234"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:36:37 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 00:36:37.858871"], ["id", 4]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "120.39"], ["updated_at", "2019-01-15 00:36:37.861889"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:36:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 00:36:40.721239"], ["id", 4]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "128.88"], ["updated_at", "2019-01-15 00:36:40.724124"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:39:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.7ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 00:39:18.715334"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 75ms (Views: 0.2ms | ActiveRecord: 9.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:39:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.5ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 00:39:25.490441"], ["updated_at", "2019-01-15 00:39:25.490441"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 00:39:25.493040"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 30ms (Views: 0.2ms | ActiveRecord: 5.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:41:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 00:41:48.514093"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 68ms (Views: 0.2ms | ActiveRecord: 6.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:41:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.6ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 00:41:50.137066"], ["updated_at", "2019-01-15 00:41:50.137066"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (29.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 00:41:50.172714"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (4.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 89ms (Views: 0.6ms | ActiveRecord: 39.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:42:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 00:42:05.969694"], ["id", 6]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-15 00:42:05.972999"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 20ms (Views: 0.6ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:43:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.6ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 00:43:14.534174"], ["id", 6]]
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:25
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "25.47"], ["updated_at", "2019-01-15 00:43:14.538248"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 23ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:48:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.6ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 00:48:23.570106"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 58ms (Views: 0.4ms | ActiveRecord: 6.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:48:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[36mCartItem Create (0.6ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 00:48:26.825885"], ["updated_at", "2019-01-15 00:48:26.825885"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:22
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 00:48:26.830975"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:28
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 35ms (Views: 0.3ms | ActiveRecord: 6.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:48:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 00:48:51.054042"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 61ms (Views: 0.2ms | ActiveRecord: 6.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:48:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
Completed 500 Internal Server Error in 18ms (ActiveRecord: 3.4ms)


  
NoMethodError (undefined method `nil' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:19:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:49:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
Completed 500 Internal Server Error in 59ms (ActiveRecord: 5.9ms)


  
NoMethodError (undefined method `quantity' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:19:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.6ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.8ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 00:59:07.262980"], ["updated_at", "2019-01-15 00:59:07.262980"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 00:59:07.269653"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 119ms (Views: 0.3ms | ActiveRecord: 16.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 00:59:08.711851"], ["id", 8]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-15 00:59:08.715363"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 00:59:09.474432"], ["id", 8]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "25.47"], ["updated_at", "2019-01-15 00:59:09.477378"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 00:59:09.747908"], ["id", 8]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "33.96"], ["updated_at", "2019-01-15 00:59:09.750660"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-15 00:59:09.969322"], ["id", 8]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "42.45"], ["updated_at", "2019-01-15 00:59:09.972704"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 18], ["updated_at", "2019-01-15 00:59:10.165482"], ["id", 8]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "50.94"], ["updated_at", "2019-01-15 00:59:10.169123"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 21], ["updated_at", "2019-01-15 00:59:13.019012"], ["id", 8]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "59.43"], ["updated_at", "2019-01-15 00:59:13.022299"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.7ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 00:59:36.033175"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 19:59:44 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.5ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 00:59:44.963819"], ["updated_at", "2019-01-15 00:59:44.963819"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 00:59:44.968013"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:00:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.8ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 01:00:46.636198"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:01:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 68ms (Views: 8.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:02:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:02:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.4ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-15 01:02:38.955917"], ["updated_at", "2019-01-15 01:02:38.955917"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:03:01 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.5ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:03:01.037546"], ["updated_at", "2019-01-15 01:03:01.037546"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 01:03:01.042256"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 18ms (Views: 0.2ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.9ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.7ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (1.4ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:15:29.014796"], ["updated_at", "2019-01-15 01:15:29.014796"], ["shopping_cart_id", 2], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 01:15:29.027312"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 82ms (Views: 3.5ms | ActiveRecord: 13.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 01:15:29.370683"], ["id", 10]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-15 01:15:29.374366"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 20ms (Views: 0.5ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 01:15:29.868039"], ["id", 11]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-15 01:15:29.871184"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 44ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 01:15:30.276037"], ["id", 10]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "25.47"], ["updated_at", "2019-01-15 01:15:30.279798"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 01:15:30.752453"], ["id", 11]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "25.47"], ["updated_at", "2019-01-15 01:15:30.756446"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 01:15:31.232896"], ["id", 10]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "33.96"], ["updated_at", "2019-01-15 01:15:31.236563"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 18ms (Views: 0.3ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 01:15:31.775713"], ["id", 11]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "33.96"], ["updated_at", "2019-01-15 01:15:31.778757"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-15 01:15:33.911164"], ["id", 10]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "42.45"], ["updated_at", "2019-01-15 01:15:33.914144"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 2], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-15 01:15:35.556750"], ["id", 11]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "42.45"], ["updated_at", "2019-01-15 01:15:35.559955"], ["id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 4.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-14 20:15:38 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (320.0ms)
Completed 200 OK in 337ms (Views: 330.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 48ms (Views: 6.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (1.0ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 01:15:43.106706"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (1.4ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:15:45.755844"], ["updated_at", "2019-01-15 01:15:45.755844"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 01:15:45.760419"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 01:15:47.561699"], ["id", 12]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-15 01:15:47.564663"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:49 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 01:15:49.516076"], ["id", 12]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "25.47"], ["updated_at", "2019-01-15 01:15:49.518805"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:15:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 01:15:51.482790"], ["id", 12]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "33.96"], ["updated_at", "2019-01-15 01:15:51.485598"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:16:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.8ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 01:16:27.979626"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:17:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.2ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 72ms (Views: 0.2ms | ActiveRecord: 6.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:17:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.4ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:17:22.161810"], ["updated_at", "2019-01-15 01:17:22.161810"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 01:17:22.167546"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 35ms (Views: 0.2ms | ActiveRecord: 7.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:17:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 01:17:28.543221"], ["id", 13]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-15 01:17:28.546042"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:17:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 01:17:46.749777"], ["id", 13]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "25.47"], ["updated_at", "2019-01-15 01:17:46.752759"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:17:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 01:17:52.702005"], ["id", 13]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "33.96"], ["updated_at", "2019-01-15 01:17:52.704651"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:17:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-15 01:17:54.004871"], ["id", 13]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "42.45"], ["updated_at", "2019-01-15 01:17:54.007803"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:17:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 18], ["updated_at", "2019-01-15 01:17:54.981065"], ["id", 13]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "50.94"], ["updated_at", "2019-01-15 01:17:54.983992"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:17:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 21], ["updated_at", "2019-01-15 01:17:55.721348"], ["id", 13]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "59.43"], ["updated_at", "2019-01-15 01:17:55.724105"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:18:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.5ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:18:04.309126"], ["updated_at", "2019-01-15 01:18:04.309126"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "70.92"], ["updated_at", "2019-01-15 01:18:04.313000"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:18:05 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 01:18:05.329315"], ["id", 14]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "82.41"], ["updated_at", "2019-01-15 01:18:05.332064"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:18:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 01:18:06.492837"], ["id", 14]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "93.9"], ["updated_at", "2019-01-15 01:18:06.495848"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:18:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 01:18:09.042204"], ["id", 14]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "105.39"], ["updated_at", "2019-01-15 01:18:09.045154"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:22:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.5ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:22:09.843673"], ["updated_at", "2019-01-15 01:22:09.843673"], ["shopping_cart_id", 1], ["product_id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "113.88"], ["updated_at", "2019-01-15 01:22:09.850359"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 19ms (Views: 0.3ms | ActiveRecord: 5.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:22:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 01:22:11.034213"], ["id", 15]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "122.37"], ["updated_at", "2019-01-15 01:22:11.037205"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:22:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 01:22:12.293543"], ["id", 15]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "130.86"], ["updated_at", "2019-01-15 01:22:12.296674"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:22:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:4\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:4\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.4ms)


  
NoMethodError (undefined method `id' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:18:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:22:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 01:22:33.709318"], ["id", 15]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "139.35"], ["updated_at", "2019-01-15 01:22:33.712423"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:22:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-15 01:22:38.062734"], ["id", 15]]
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:24
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "147.84"], ["updated_at", "2019-01-15 01:22:38.065993"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:23:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.8ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 01:23:06.188672"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:28:07 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 39ms (Views: 0.7ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:28:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.6ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:28:09.393313"], ["updated_at", "2019-01-15 01:28:09.393313"], ["shopping_cart_id", 1], ["product_id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:21
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 01:28:09.404554"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:27
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 39ms (Views: 1.2ms | ActiveRecord: 5.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:30:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.6ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 01:30:13.088565"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 140ms (Views: 0.3ms | ActiveRecord: 10.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:30:15 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
Completed 500 Internal Server Error in 22ms (ActiveRecord: 3.5ms)


  
NoMethodError (undefined method `empty?' for nil:NilClass):
  
app/graphql/resolvers/add_to_cart.rb:19:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:38:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (1.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (1.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (9.6ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:38:02.647543"], ["updated_at", "2019-01-15 01:38:02.647543"], ["shopping_cart_id", 1], ["product_id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
Completed 500 Internal Server Error in 196ms (ActiveRecord: 29.7ms)


  
ActiveModel::MissingAttributeError (can't write unknown attribute `product`):
  
app/graphql/resolvers/add_to_cart.rb:21:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:43:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (5.7ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 94ms (Views: 0.8ms | ActiveRecord: 15.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:43:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.7ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.8ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 01:43:33.252472"], ["updated_at", "2019-01-15 01:43:33.252472"], ["shopping_cart_id", 1], ["product_id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (4.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 01:43:33.256516"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 64ms (Views: 0.4ms | ActiveRecord: 11.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:44:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" INNER JOIN "cart_items" ON "cart_items"."shopping_cart_id" = "shopping_carts"."id" WHERE (shopping_cart_id = '2' )[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 500 Internal Server Error in 26ms (ActiveRecord: 0.5ms)


  
NoMethodError (undefined method `product_id' for #<ShoppingCart:0x00007fa11cec0120>):
  
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:45:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (4.1ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."user_id" = $1 LIMIT $2[0m  [["user_id", "2"], ["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:33
Completed 500 Internal Server Error in 62ms (ActiveRecord: 5.2ms)


  
ActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column cart_items.user_id does not exist
LINE 1: SELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"....
                                                       ^
: SELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."user_id" = $1 LIMIT $2):
  
app/graphql/types/query_type.rb:33:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:47:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil}}
  [1m[36mCartItem Load (3.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 500 Internal Server Error in 61ms (ActiveRecord: 3.5ms)


  
ActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column "user_id" does not exist
LINE 1: SELECT "cart_items".* FROM "cart_items" WHERE (user_id = '2'...
                                                       ^
: SELECT "cart_items".* FROM "cart_items" WHERE (user_id = '2')):
  
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:49:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:33
Completed 500 Internal Server Error in 72ms (ActiveRecord: 1.7ms)


  
NoMethodError (undefined method `cart_items' for nil:NilClass):
  
app/graphql/types/query_type.rb:34:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:49:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  cart_items_by_id(\n  user_id: 2\n  ){\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/types/query_type.rb:33
Completed 500 Internal Server Error in 60ms (ActiveRecord: 1.4ms)


  
NoMethodError (undefined method `cart_item' for nil:NilClass):
  
app/graphql/types/query_type.rb:34:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:50:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\n      cart_items{\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\n      cart_items{\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 43ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:50:54 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\n      cart_items{\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(\n  user_id: 2\n  ){\n      cart_items{\n        product_id,\n        quantity\n      }\n\n  }\n  \n", "variables"=>nil}}
Completed 200 OK in 38ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:51:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mShoppingCart Create (0.5ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-15 01:51:24.965112"], ["updated_at", "2019-01-15 01:51:24.965112"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:15
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 3]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 74ms (Views: 0.2ms | ActiveRecord: 6.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:51:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:58:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.7ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 112ms (Views: 0.8ms | ActiveRecord: 8.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 8ms (Views: 0.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 9ms (Views: 0.4ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 9ms (Views: 0.6ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.4ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 8ms (Views: 0.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 9ms (Views: 0.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 9ms (Views: 0.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 10ms (Views: 0.6ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 12ms (Views: 1.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 12ms (Views: 0.5ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 23ms (Views: 0.3ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 8ms (Views: 0.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 20:59:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 3], ["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


  [1m[35m (90.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (20.9ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (244.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (208.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (509.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (377.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (1.0ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (11.7ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (6.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-15 01:59:56.450067"], ["updated_at", "2019-01-15 01:59:56.450067"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (4.2ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-15 01:59:56.525972"], ["updated_at", "2019-01-15 01:59:56.525972"]]
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-15 01:59:56.529874"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.9ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-15 01:59:56.566759"], ["updated_at", "2019-01-15 01:59:56.566759"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-15 01:59:56.569906"], ["updated_at", "2019-01-15 01:59:56.569906"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.3ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-15 01:59:56.571853"], ["updated_at", "2019-01-15 01:59:56.571853"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:00:14 -0500
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.6ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 83ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:00:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateShoppingCart::Shopping):
  
app/graphql/resolvers/create_shopping_cart.rb:14:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:01:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Create (3.0ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-15 02:01:26.190793"], ["updated_at", "2019-01-15 02:01:26.190793"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 81ms (Views: 0.2ms | ActiveRecord: 9.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:01:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Create (0.3ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-15 02:01:30.492579"], ["updated_at", "2019-01-15 02:01:30.492579"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 2]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:01:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Create (0.4ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-15 02:01:31.028388"], ["updated_at", "2019-01-15 02:01:31.028388"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 3]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:38:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.6ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Create (0.4ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-15 02:38:31.730967"], ["updated_at", "2019-01-15 02:38:31.730967"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mCartItem Load (0.6ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 71ms (Views: 0.2ms | ActiveRecord: 9.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:38:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 9ms (Views: 0.4ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 63ms (Views: 0.3ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:39:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:43:26 -0500
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.7ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.9ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" IN ($1, $2, $3, $4)[0m  [["shopping_cart_id", 1], ["shopping_cart_id", 2], ["shopping_cart_id", 3], ["shopping_cart_id", 4]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 128ms (Views: 0.4ms | ActiveRecord: 7.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:43:30 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 1.0ms)


  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (167.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_development"[0m
  â†³ bin/rails:4
  [1m[35m (220.4ms)[0m  [1m[35mDROP DATABASE IF EXISTS "quick_shop_test"[0m
  â†³ bin/rails:4
  [1m[35m (552.1ms)[0m  [1m[35mCREATE DATABASE "quick_shop_development" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35m (370.3ms)[0m  [1m[35mCREATE DATABASE "quick_shop_test" ENCODING = 'unicode'[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (2.3ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.4ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-15 02:44:53.536045"], ["updated_at", "2019-01-15 02:44:53.536045"]]
  â†³ db/schema.rb:13
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35mSQL (0.3ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  â†³ db/schema.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "cart_items" CASCADE[0m
  â†³ db/schema.rb:18
  [1m[35m (7.0ms)[0m  [1m[35mCREATE TABLE "cart_items" ("id" bigserial primary key, "quantity" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "shopping_cart_id" bigint, "product_id" bigint)[0m
  â†³ db/schema.rb:18
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_product_id" ON "cart_items"  ("product_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX  "index_cart_items_on_shopping_cart_id" ON "cart_items"  ("shopping_cart_id")[0m
  â†³ db/schema.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "products" CASCADE[0m
  â†³ db/schema.rb:28
  [1m[35m (6.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" bigserial primary key, "title" character varying, "description" character varying, "price" decimal, "shipping" decimal, "inventory_count" integer, "sold_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:28
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "shopping_carts" CASCADE[0m
  â†³ db/schema.rb:39
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "shopping_carts" ("id" bigserial primary key, "user_id" bigint, "completed" boolean, "total_cost" decimal, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:39
  [1m[35m (4.8ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_681a180e84"
FOREIGN KEY ("product_id")
  REFERENCES "products" ("id")
[0m
  â†³ db/schema.rb:47
  [1m[35m (1.6ms)[0m  [1m[35mALTER TABLE "cart_items" ADD CONSTRAINT "fk_rails_42b0cf194c"
FOREIGN KEY ("shopping_cart_id")
  REFERENCES "shopping_carts" ("id")
[0m
  â†³ db/schema.rb:48
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190109195636)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20190109031841),
(20190109032351),
(20190109194701),
(20190109034233);

[0m
  â†³ db/schema.rb:13
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-15 02:44:53.613106"], ["updated_at", "2019-01-15 02:44:53.613106"]]
  â†³ db/schema.rb:13
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ bin/rails:4
  [1m[36mActiveRecord::InternalMetadata Update (0.5ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = $1, "updated_at" = $2 WHERE "ar_internal_metadata"."key" = $3[0m  [["value", "test"], ["updated_at", "2019-01-15 02:44:53.616544"], ["key", "environment"]]
  â†³ bin/rails:4
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ bin/rails:4
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:4
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "USB-C to USB Adapter"], ["description", "* Turn any USB-C port into a USB 3.0 port\n* Connect flash drives, keyboards, or other peripherals to the new Macbook Pro and other USB-C devices\n* Compatible with tablets and smartphones with a USB Type-C connector including the Samsung Galaxy S9/S9 Plus/S8, Huawei P20/P20 Pro\n* Hi-speed USB C Male to Standard Type A USB 3.0 Data sync, Video, Audio 4-in-1 cable. The maximum data transfer rate up to 5GBit/s, USB3.0 standard\n* Reversible Design: Smaller, smarter and more convenient! Low-profile connector with a reversible design simplifies the connection.\n* Plug and unplug easily without checking for the connector orientation.\n* 90 day warranty."], ["price", "3.5"], ["shipping", "0.99"], ["inventory_count", 34], ["sold_count", 30], ["created_at", "2019-01-15 02:44:53.652422"], ["updated_at", "2019-01-15 02:44:53.652422"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "Apple"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 20], ["sold_count", 30], ["created_at", "2019-01-15 02:44:53.654981"], ["updated_at", "2019-01-15 02:44:53.654981"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ db/seeds.rb:11
  [1m[36mProduct Create (0.2ms)[0m  [1m[32mINSERT INTO "products" ("title", "description", "price", "shipping", "inventory_count", "sold_count", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING "id"[0m  [["title", "banana"], ["description", "Good"], ["price", "2.5"], ["shipping", "0.99"], ["inventory_count", 0], ["sold_count", 30], ["created_at", "2019-01-15 02:44:53.656821"], ["updated_at", "2019-01-15 02:44:53.656821"]]
  â†³ db/seeds.rb:11
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ db/seeds.rb:11
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:15 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Create (0.7ms)[0m  [1m[32mINSERT INTO "shopping_carts" ("user_id", "completed", "total_cost", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["user_id", 2], ["completed", false], ["total_cost", "0.0"], ["created_at", "2019-01-15 02:45:15.263788"], ["updated_at", "2019-01-15 02:45:15.263788"]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 109ms (Views: 0.3ms | ActiveRecord: 7.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (1.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (1.4ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 02:45:21.588256"], ["updated_at", "2019-01-15 02:45:21.588256"], ["shopping_cart_id", 1], ["product_id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 02:45:21.594034"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 47ms (Views: 0.2ms | ActiveRecord: 9.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 6], ["updated_at", "2019-01-15 02:45:22.893789"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-15 02:45:22.898327"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 9], ["updated_at", "2019-01-15 02:45:23.602773"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "25.47"], ["updated_at", "2019-01-15 02:45:23.607624"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 12], ["updated_at", "2019-01-15 02:45:24.123366"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "33.96"], ["updated_at", "2019-01-15 02:45:24.127916"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 15], ["updated_at", "2019-01-15 02:45:24.626005"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "42.45"], ["updated_at", "2019-01-15 02:45:24.630769"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.5ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 18], ["updated_at", "2019-01-15 02:45:25.078130"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "50.94"], ["updated_at", "2019-01-15 02:45:25.081804"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 21], ["updated_at", "2019-01-15 02:45:25.259736"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "59.43"], ["updated_at", "2019-01-15 02:45:25.264540"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 24], ["updated_at", "2019-01-15 02:45:25.424479"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "67.92"], ["updated_at", "2019-01-15 02:45:25.428926"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.3ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 27], ["updated_at", "2019-01-15 02:45:25.583186"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "76.41"], ["updated_at", "2019-01-15 02:45:25.587673"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.5ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 30], ["updated_at", "2019-01-15 02:45:25.728513"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "84.9"], ["updated_at", "2019-01-15 02:45:25.733575"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.4ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 33], ["updated_at", "2019-01-15 02:45:25.872321"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "93.39"], ["updated_at", "2019-01-15 02:45:25.876961"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 36], ["updated_at", "2019-01-15 02:45:26.003058"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "101.88"], ["updated_at", "2019-01-15 02:45:26.007942"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 39], ["updated_at", "2019-01-15 02:45:26.141670"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "110.37"], ["updated_at", "2019-01-15 02:45:26.145810"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 42], ["updated_at", "2019-01-15 02:45:26.282818"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "118.86"], ["updated_at", "2019-01-15 02:45:26.286006"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.1ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 45], ["updated_at", "2019-01-15 02:45:26.414785"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "127.35"], ["updated_at", "2019-01-15 02:45:26.418396"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.5ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 48], ["updated_at", "2019-01-15 02:45:26.547183"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "135.84"], ["updated_at", "2019-01-15 02:45:26.553501"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 17ms (Views: 0.2ms | ActiveRecord: 5.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.3ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 51], ["updated_at", "2019-01-15 02:45:26.687051"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "144.33"], ["updated_at", "2019-01-15 02:45:26.691554"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[36mCartItem Update (0.4ms)[0m  [1m[33mUPDATE "cart_items" SET "quantity" = $1, "updated_at" = $2 WHERE "cart_items"."id" = $3[0m  [["quantity", 54], ["updated_at", "2019-01-15 02:45:26.843468"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:23
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "152.82"], ["updated_at", "2019-01-15 02:45:26.848186"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:45:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.9ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 02:45:32.023679"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:46:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:3\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.5ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 02:46:04.724496"], ["updated_at", "2019-01-15 02:46:04.724496"], ["shopping_cart_id", 1], ["product_id", 3]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 02:46:04.728291"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 16ms (Views: 0.4ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:54:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 77ms (ActiveRecord: 6.9ms)


  
NoMethodError (undefined method `CartItem' for #<ShoppingCart:0x00007fe9f6c1dad0>
Did you mean?  cart_items):
  
app/graphql/resolvers/check_out_cart.rb:15:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:55:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
  [1m[36mCartItem Load (4.9ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."shopping_carts_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["shopping_carts_id", "2"], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
Completed 500 Internal Server Error in 72ms (ActiveRecord: 8.8ms)


  
ActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column cart_items.shopping_carts_id does not exist
LINE 1: ...s" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_item...
                                                             ^
HINT:  Perhaps you meant to reference the column "cart_items.shopping_cart_id".
: SELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."shopping_carts_id" = $2 LIMIT $3):
  
app/graphql/resolvers/check_out_cart.rb:15:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 21:57:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:14
Completed 500 Internal Server Error in 72ms (ActiveRecord: 4.2ms)


  
NameError (undefined local variable or method `product' for #<Resolvers::CheckOutCart:0x00007fe9f913fe08>
Did you mean?  proc):
  
app/graphql/resolvers/check_out_cart.rb:15:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 23:57:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:17
Completed 500 Internal Server Error in 136ms (ActiveRecord: 14.9ms)


  
NameError (undefined local variable or method `count' for #<Resolvers::CheckOutCart:0x00007fe9f7e8c838>):
  
app/graphql/resolvers/check_out_cart.rb:19:in `block in call'
app/graphql/resolvers/check_out_cart.rb:16:in `call'
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-14 23:59:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:17
Completed 200 OK in 82ms (Views: 0.4ms | ActiveRecord: 7.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-14 23:59:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:00:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:01:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.7ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "0.0"], ["updated_at", "2019-01-15 05:01:04.639319"], ["id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:01:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.8ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 05:01:12.843171"], ["updated_at", "2019-01-15 05:01:12.843171"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.5ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "8.49"], ["updated_at", "2019-01-15 05:01:12.849122"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 23ms (Views: 0.2ms | ActiveRecord: 4.6ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:01:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[36mProduct Update (0.3ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 17], ["updated_at", "2019-01-15 05:01:16.504627"], ["id", 2]]
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:24
  [1m[36mCartItem Destroy (0.4ms)[0m  [1m[31mDELETE FROM "cart_items" WHERE "cart_items"."id" = $1[0m  [["id", 3]]
  â†³ app/graphql/resolvers/check_out_cart.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:24
Completed 500 Internal Server Error in 14ms (ActiveRecord: 2.8ms)


  
NoMethodError (undefined method `completed' for #<Array:0x00007fe9f6a94218>
Did you mean?  compact):
  
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:02:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.1ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
Completed 200 OK in 74ms (Views: 0.2ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:20:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:2\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.6ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.8ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 05:20:14.911682"], ["updated_at", "2019-01-15 05:20:14.911682"], ["shopping_cart_id", 1], ["product_id", 2]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "16.98"], ["updated_at", "2019-01-15 05:20:14.920791"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 126ms (Views: 1.3ms | ActiveRecord: 16.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:20:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  add_to_cart(\n  user_id: 2\n  product_id:1\n  quantity: 3\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:16
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:17
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT  "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1 AND "cart_items"."product_id" = $2 LIMIT $3[0m  [["shopping_cart_id", 1], ["product_id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[36mCartItem Create (0.5ms)[0m  [1m[32mINSERT INTO "cart_items" ("quantity", "created_at", "updated_at", "shopping_cart_id", "product_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["quantity", 3], ["created_at", "2019-01-15 05:20:26.033741"], ["updated_at", "2019-01-15 05:20:26.033741"], ["shopping_cart_id", 1], ["product_id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:20
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mShoppingCart Update (0.7ms)[0m  [1m[33mUPDATE "shopping_carts" SET "total_cost" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["total_cost", "28.47"], ["updated_at", "2019-01-15 05:20:26.039000"], ["id", 1]]
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/add_to_cart.rb:26
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 20ms (Views: 0.3ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:20:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  shopping_cart_by_id(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT "shopping_carts".* FROM "shopping_carts" WHERE (user_id = '2')[0m
  â†³ app/controllers/graphql_controller.rb:8
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:21:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:17
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[36mProduct Update (0.3ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 14], ["updated_at", "2019-01-15 05:21:02.438553"], ["id", 2]]
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:24
  [1m[36mCartItem Destroy (0.3ms)[0m  [1m[31mDELETE FROM "cart_items" WHERE "cart_items"."id" = $1[0m  [["id", 4]]
  â†³ app/graphql/resolvers/check_out_cart.rb:24
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:24
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT  "products".* FROM "products" WHERE "products"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:17
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[36mProduct Update (0.4ms)[0m  [1m[33mUPDATE "products" SET "inventory_count" = $1, "updated_at" = $2 WHERE "products"."id" = $3[0m  [["inventory_count", 31], ["updated_at", "2019-01-15 05:21:02.447801"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:23
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:24
  [1m[36mCartItem Destroy (0.3ms)[0m  [1m[31mDELETE FROM "cart_items" WHERE "cart_items"."id" = $1[0m  [["id", 5]]
  â†³ app/graphql/resolvers/check_out_cart.rb:24
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:24
Completed 200 OK in 36ms (Views: 12.6ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:21:06 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.3ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:22:21 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.2ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "total_cost" = $2, "updated_at" = $3 WHERE "shopping_carts"."id" = $4[0m  [["completed", true], ["total_cost", "0.0"], ["updated_at", "2019-01-15 05:22:21.410639"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:34
  [1m[36mShoppingCart Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:34
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", false], ["updated_at", "2019-01-15 05:22:21.413754"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:34
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:34
Completed 500 Internal Server Error in 139ms (ActiveRecord: 6.1ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:24:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[36mShoppingCart Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[36mShoppingCart Update (0.4ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", true], ["updated_at", "2019-01-15 05:24:14.886122"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:34
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:34
  [1m[36mShoppingCart Update (0.2ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", false], ["updated_at", "2019-01-15 05:24:14.891544"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:34
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:34
Completed 500 Internal Server Error in 75ms (ActiveRecord: 8.2ms)


  
NoMethodError (undefined method `completed' for true:TrueClass):
  
app/controllers/graphql_controller.rb:8:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:27:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  check_out_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:15
  [1m[36mCartItem Load (0.3ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[36mShoppingCart Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[36mShoppingCart Update (0.3ms)[0m  [1m[33mUPDATE "shopping_carts" SET "completed" = $1, "updated_at" = $2 WHERE "shopping_carts"."id" = $3[0m  [["completed", true], ["updated_at", "2019-01-15 05:27:41.996149"], ["id", 1]]
  â†³ app/graphql/resolvers/check_out_cart.rb:31
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/check_out_cart.rb:31
Completed 200 OK in 65ms (Views: 0.2ms | ActiveRecord: 6.8ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:28:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 57ms (Views: 0.3ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:28:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:28:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:28:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:28:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil}}
  [1m[36mProduct Load (0.4ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:28:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:30:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  all_products(all_avail: false){\n  \ttitle,\n    description,\n    inventory_count\n  }\n  \n}", "variables"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 51ms (Views: 0.3ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:30:34 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  clear_cart(\n  user_id: 2\n  ){\tcompleted,\n      total_cost,\n      user_id,\n    \tcart_items{\n        product_id,\n        quantity\n      }\n\n    }\n  }\n  \n", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.2ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:15
  [1m[36mCartItem Update All (0.2ms)[0m  [1m[33mUPDATE "cart_items" SET "shopping_cart_id" = NULL WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:16
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 AND "shopping_carts"."id" != $2 LIMIT $3[0m  [["user_id", 2], ["id", 1], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  â†³ app/graphql/resolvers/clear_cart.rb:18
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/clear_cart.rb:19
  [1m[36mCartItem Load (0.4ms)[0m  [1m[34mSELECT "cart_items".* FROM "cart_items" WHERE "cart_items"."shopping_cart_id" = $1[0m  [["shopping_cart_id", 1]]
  â†³ app/controllers/graphql_controller.rb:8
Completed 200 OK in 30ms (Views: 0.2ms | ActiveRecord: 6.5ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 00:30:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  create_shopping_cart(user_id: 2){\n    completed,\n    user_id,\n    total_cost,\n    cart_items{\n      product_id,\n      quantity\n\t\t}\n  }\n  \n}", "variables"=>nil}}
  [1m[36mShoppingCart Load (0.4ms)[0m  [1m[34mSELECT  "shopping_carts".* FROM "shopping_carts" WHERE "shopping_carts"."user_id" IS NULL LIMIT $1[0m  [["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:14
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[36mShoppingCart Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "shopping_carts" WHERE "shopping_carts"."user_id" = $1 LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  â†³ app/graphql/resolvers/create_shopping_cart.rb:16
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 1.0ms)


Started GET "/" for 127.0.0.1 at 2019-01-15 01:18:29 -0500
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/ray/.rvm/gems/ruby-2.5.2/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb (2.2ms)
Completed 200 OK in 14ms (Views: 6.4ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2019-01-15 01:18:30 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/ray/.rvm/gems/ruby-2.5.2/gems/graphiql-rails-1.5.0/app/views/graphiql/rails/editors/show.html.erb (268.5ms)
Completed 200 OK in 306ms (Views: 299.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2019-01-15 01:18:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 78ms (Views: 6.6ms | ActiveRecord: 0.0ms)


